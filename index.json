[{"body":"Regolith R1.5 is a feature release which includes several improvements and optimizations. To summarize, Regolith 1.5 ships simpler workspace management, a Rofi-based Look switcher, and numerous internal optimizations and cleanup. Read below for more details.\nIf you maintain your own i3 config file, note that the copy shipped in Regolith 1.5 has changed in that it reads more configuration from Xresources. The intention of this change is to require a full copy of the i3 config file less often, by allowing users to customize the system via Xresource overrides instead of copy/edit of the i3 config file.\n Known Issues Issues and fixes are being tracked in this project.\nFeatures   Next Free Workspace A typical part of managing workspaces in an i3-based desktop is moving to unused workspaces and then loading some applications. Before this feature, a user has to determine which unused workspace they prefer. This is done by scanning the list of existing used workspaces to determine an unused one. Now, the system can do this automatically. The super ` keybinding will move to the next free workspace. super alt ` will move the focused window into the next free workspace.   View and Change Looks via Rofi  Looks can be changed now via a Rofi dialog rather than having to configure the Xresource override via the command-line. To do this, use keybinding `-l` and then select from the dialog to load a Look.   GSettings Overrides Regolith now uses [gsettings overrides](https://help.gnome.org/admin/system-admin-guide/stable/overrides.html.en) to configure various GNOME settings for use with Regolith. In previous versions of Regolith, settings were written globally to the user session from within the Regolith startup code. This could cause issues if the user works in multiple desktop environments. Now, Regolith GNOME settings are defined in an override file that is only in effect while using a Regolith session. This allows switching between desktop environments without settings from Regolith impacting other environments.   New Looks   Users have contributed some new Looks to Regolith: dracula, gruvbox, and pop-os. Each of these looks presents a distinctive color palate, typeface, and GTK theme.   i3-gaps upgraded to 4.18.2 See i3-gaps release notes here.   More Refined Customizations Numerous small changes allow more granual system customization, such as specifying the temperature unit, custom Compositor settings, and a more comprehensive way of changing i3 keybindings without having to copy the entire config file.   More Desktop Environment Packages The following packages can be installed in place of regolith-desktop for specific sets of packages based on user needs: regolith-desktop-minimal, regolith-desktop-standard, regolith-desktop-mobile, and regolith-desktop-complete   New default compositor: Picom version 8 See Picom's releaes notes here.   Remontoire upgraded to version 1.4 Includes better multi-monitor support and other bug fixes.   Optional integration with td-cli  Access a simple todo app via Rofi.     Fixes Have a look at the R1.5 project page for a list of bug fixes.\nChangelog Delta from Regolith 1.4.1 to Regolith 1.5 ######################################## # Release Notes for dracula-gtk ######################################## dracula-gtk (1.0.1-1) bionic; urgency=medium [ Ken Gilmer ] * Remove unnecessary files dracula-gtk (1.0-1) bionic; urgency=medium * [ Ken Gilmer ] * Packaging version add4f8c ######################################## # Release Notes for fonts-materialdesignicons-webfont ######################################## fonts-materialdesignicons-webfont (1.6.50-3regolith3) bionic; urgency=medium * Backporting to bionic for Regolith. ######################################## # Release Notes for gruvbox-gtk ######################################## gruvbox-gtk (1.0.1-1) bionic; urgency=medium [ Ken Gilmer ] * Rename root directory of theme to Gruvbox for consistency w/ other GTK themes. * Add gbp config for package management. gruvbox-gtk (1.0-1) bionic; urgency=medium [ Ken Gilmer ] * New upstream version 1.0 gruvbox-gtk (1.0-1) bionic; urgency=medium [ eximus ] * Initial commit * gruvbox theme ######################################## # Release Notes for i3-gaps-wm ######################################## i3-gaps-wm (4.18.2-1~regolith2) bionic; urgency=medium * Package source from upstream https://github.com/Airblader/i3/releases/tag/4.18.2 ######################################## # Release Notes for i3ipc-python ######################################## i3ipc-python (2.1.1-1ubuntu1~ppa6) bionic; urgency=medium * Update build dependencies hoping to resolve packaing problems. ######################################## # Release Notes for i3xrocks ######################################## i3xrocks (1.3.4-1) bionic; urgency=medium [ Ken Gilmer ] * Version bump to match changelog. Cleanup. i3xrocks (1.3.3-1) bionic; urgency=medium [ Will Winder ] * Add optional default resource value. * Minor cleanup. * Free resource allocated by xcb_xrm_resource_get_string * Fix possible truncated resource value. [ Ken Gilmer ] * Add gbp config file ######################################## # Release Notes for picom ######################################## picom (8-1~1.gbp353272ubuntu1) bionic; urgency=medium [ Ken Gilmer ] * Remove github files from debian branch. picom (8-1~1.gbp353272) bionic; urgency=medium [ Ken Gilmer ] * New upstream version 8 ######################################## # Release Notes for plano-theme ######################################## plano-theme (3.36-1-1regolith1) bionic; urgency=medium [ Ken Gilmer ] * New upstream version 3.36-1 ######################################## # Release Notes for plymouth-theme-regolith ######################################## plymouth-theme-regolith (1.0.3-1) focal; urgency=medium * Tweaks to config files. plymouth-theme-regolith (1.0.2-1) focal; urgency=medium * Ship grub file. plymouth-theme-regolith (1.0.1-1) focal; urgency=medium * Add package hooks. ######################################## # Release Notes for pop-fonts ######################################## pop-fonts (1.0.3~1555617065~18.04~a86eb73) bionic; urgency=medium * Auto Build ######################################## # Release Notes for python3-i3ipc ######################################## python3-i3ipc (2.1.1-1ubuntu1~ppa7) bionic; urgency=medium * Changes to python version. i3ipc-python (2.1.1-1ubuntu1~ppa6) bionic; urgency=medium * Update build dependencies hoping to resolve packaing problems. i3ipc-python (2.1.1-1ubuntu1~ppa4) eoan; urgency=medium * Add python-xlib dependency. i3ipc-python (2.1.1-1ubuntu1~ppa2) eoan; urgency=medium * Initial release from https://github.com/altdesktop/i3ipc-python/archive/v2.1.1.tar.gz. ######################################## # Release Notes for regolith-compositor-compton-glx ######################################## regolith-compositor-compton-glx (1.1.0-1) bionic; urgency=medium [ Ken Gilmer ] * Init script will kill pre-existing app instance before starting new. Part of fix for https://github.com/regolith-linux/regolith-desktop/issues/475. regolith-compositor-compton-glx (1.0.10-1) bionic; urgency=medium [ Ken Gilmer ] * Fix typo in compton config file, found by @gservat. regolith-compositor-compton-glx (1.0.9-1) bionic; urgency=medium [ Ken Gilmer ] * Add xrender-sync-fence to handle issue https://github.com/regolith-linux/regolith-desktop/issues/116. regolith-compositor-compton-glx (1.0.8-1) bionic; urgency=medium [ Ken Gilmer ] * Ship config file. regolith-compositor-compton-glx (1.0.7-1) bionic; urgency=medium [ Ken Gilmer ] * Add gbp conf file, cleanup. ######################################## # Release Notes for regolith-compositor-none ######################################## regolith-compositor-none (1.0.3-1) bionic; urgency=medium [ Ken Gilmer ] * Add gbp conf file, cleanup. ######################################## # Release Notes for regolith-compositor-picom-glx ######################################## regolith-compositor-picom-glx (1.1.1-1) bionic; urgency=medium [ Ken Gilmer ] * Fix typo found in https://github.com/regolith-linux/regolith-compositor-picom-glx/issues/1. * Init script will kill pre-existing app instance before starting new. Part of fix for https://github.com/regolith-linux/regolith-desktop/issues/475. regolith-compositor-picom-glx (1.0.1-1) bionic; urgency=medium [ Ken Gilmer ] * Fix typo found in https://github.com/regolith-linux/regolith-compositor-picom-glx/issues/1. regolith-compositor-picom-glx (1.0.0-1) bionic; urgency=medium * Initial release ######################################## # Release Notes for regolith-compositor-xcompmgr ######################################## regolith-compositor-xcompmgr (1.2.0-1) bionic; urgency=medium [ Ken Gilmer ] * Init script will kill pre-existing app instance before starting new. Part of fix for https://github.com/regolith-linux/regolith-desktop/issues/475. regolith-compositor-xcompmgr (1.1.0-1) bionic; urgency=medium [ Ken Gilmer ] * Add ability to override xcompmgr defaults. Fixes https://github.com/regolith-linux/regolith-desktop/issues/382. regolith-compositor-xcompmgr (1.0.3-1) bionic; urgency=medium [ Ken Gilmer ] * Add gbp conf file, cleanup. ######################################## # Release Notes for regolith-default-settings ######################################## regolith-default-settings (1.0-1bionic1) bionic; urgency=medium [ Ken Gilmer ] * Add bionic specific gsettings overrides. regolith-default-settings (1.0-1) focal; urgency=medium * Initial release, files moved from package regolith-gnome-flashback. ######################################## # Release Notes for regolith-desktop ######################################## regolith-desktop (2.78-1bionic) bionic; urgency=medium [ Ken Gilmer ] * Move from compton to picom as default compositor. regolith-desktop (2.75-1bionic) bionic; urgency=medium [ Ken Gilmer ] * Change unclutter to regolith-unclutter-fixes to address https://github.com/regolith-linux/speed-ricer/issues/14. regolith-desktop (2.72-1bionic1) bionic; urgency=medium [ Ken Gilmer ] * Version bump for next DE release regolith-desktop (2.71-1bionic1) bionic; urgency=medium [ Ken Gilmer ] * Depend on regolith-default-settings to migrate to gsettings overrides. * Update branch name to conform w/ gbp. regolith-desktop (2.68-1bionic1) bionic; urgency=medium * Package: Remove postinst to unblock upgrades (#432) regolith-desktop (2.60-1bionic1) bionic; urgency=medium * Package: Remove unclutter-startup, if installed regolith-desktop (2.59-1bionic1) bionic; urgency=medium * Bump version file for R1.4.1 release. ######################################## # Release Notes for regolith-ftue ######################################## regolith-ftue (1.0.11-1) bionic; urgency=medium [ Ken Gilmer ] * Add gbp config file. ######################################## # Release Notes for regolith-gnome-flashback ######################################## regolith-gnome-flashback (2.6.2-1) bionic; urgency=medium [ Ken Gilmer ] * Remove invalid component from desktop session file. * Cleanup regolith-gnome-flashback (2.6.1-1) bionic; urgency=medium [ Ken Gilmer ] * Rename files to make session work. regolith-gnome-flashback (2.6.0-1) bionic; urgency=medium [ Ken Gilmer ] * Add gbp config file. * Simply package, model directories in package and remove Makefile. * Update session files to refer to regolith over i3-gnome-flashback. Experimental. regolith-gnome-flashback (2.5.0-1) bionic; urgency=medium * Remove desktop files moved to regolith-default-settings. regolith-gnome-flashback (2.4.19-1focal1) focal; urgency=medium * Fix wallpaper gsettings override. regolith-gnome-flashback (2.4.18-1focal1) focal; urgency=medium * Remove non Regolith i3 config file load logic. regolith-gnome-flashback (2.4.17-1focal1) focal; urgency=medium * Move to gsettings overrides for static dconf changes. * Change session name from i3-gnome to regolith. * Remove wm theme setting. ######################################## # Release Notes for regolith-i3-gaps-config ######################################## regolith-i3-gaps-config (2.8.0-1) bionic; urgency=medium [ Bence Ferdinandy ] * adding bindings for next_on_output and prev_on_output (#29) regolith-i3-gaps-config (2.7.2-1) bionic; urgency=medium [ Ken Gilmer ] * Add nm-applet to launch by default. Enables better network connectivity workflow. regolith-i3-gaps-config (2.7.1-1) bionic; urgency=medium [ Ken Gilmer ] * Shorten look-selector to look for rofi menu. regolith-i3-gaps-config (2.7.0-1) bionic; urgency=medium [ Ken Gilmer ] * Add launcher for look selector. regolith-i3-gaps-config (2.6.0-1) bionic; urgency=medium [ Ken Gilmer ] * Based on idea from @Ukaszg, extract all keybindings to Xres keys for easy overriding without i3 file copy. Fixes https://github.com/regolith-linux/regolith-i3-gaps-config/issues/25. * Restart compositor upon i3 restart. Part of fix for https://github.com/regolith-linux/regolith-desktop/issues/475. regolith-i3-gaps-config (2.5.1-1) bionic; urgency=medium [ Moritz Heiber ] * Set tray output to primary by default (#24) [ Ken Gilmer ] * Allow the bar mode (dock|hide|invisible) to be specified by xres overrides. regolith-i3-gaps-config (2.5.0-1) bionic; urgency=medium [ Ken Gilmer ] * Add keybindings for 'next free workspace' feature. regolith-i3-gaps-config (2.4.18-1) bionic; urgency=medium [ Will Winder ] * Add missing keybind for moving the workspace with hjkl. (#19) [ Jordan Cohen ] * shortcuts for explicit window orientation and hierarchical focusing (#18) regolith-i3-gaps-config (2.4.17-1) bionic; urgency=medium [ Markus Bertheau ] * Allow customization of workspace_auto_back_and_forth (#20) regolith-i3-gaps-config (2.4.16-1) bionic; urgency=medium [ ukaszg ] * configurable workspace keys (#17) regolith-i3-gaps-config (2.4.15-1) bionic; urgency=medium [ Ken Gilmer ] * Cleanup from lintian warnings. regolith-i3-gaps-config (2.4.14-1) bionic; urgency=medium * Take smart-gaps fix from @winder. * Comment cleanup. ######################################## # Release Notes for regolith-i3xrocks-config ######################################## regolith-i3xrocks-config (3.2.6-1ubuntu2) bionic; urgency=medium [ Ken Gilmer ] * Fix todo icon from updated material design web icons change regolith-i3xrocks-config (3.2.5-1ubuntu1) bionic; urgency=medium [ Rafael Lacerda ] * Fix crash when focused window name is None (#81) [ Peter Mahnke ] * Remove decimal places from battery number (#80) regolith-i3xrocks-config (3.2.4-1) bionic; urgency=medium [ Ken Gilmer ] * Temp status indicator can be configured with sensor name via Xres value i3xrocks.temp.key. regolith-i3xrocks-config (3.2.3-1) bionic; urgency=medium [ Pedro Kostelec ] * [IMPR] Show aggregated battery percentage (#78) [ Ken Gilmer ] * Fix issue found in livecd enviroment w memory script [ Pedro Kostelec ] * [FIX] Fixes dissapearing indicator when value is 0 (#79) regolith-i3xrocks-config (3.2.2-1) bionic; urgency=medium [ Peter Mahnke ] * Make curl work for special characters (#76) [ Ken Gilmer ] * Remove debugging line mistakenly added by me in earlier fix. regolith-i3xrocks-config (3.2.1-1) bionic; urgency=medium [ Ken Gilmer ] * Fix cpu-usage script regolith-i3xrocks-config (3.2.0-1) bionic; urgency=medium [ Ken Gilmer ] * Add ability to specify temperature unit via xres, and fallback to country locale if unspecified. Based on https://github.com/regolith-linux/regolith-desktop/issues/372. (#72) [ Joel Hoisko ] * Add option to define a specific media player (#63) regolith-i3xrocks-config (3.1.3-1) bionic; urgency=medium [ Ken Gilmer ] * Add ability to override click commands via Xresources. Fixes https://github.com/regolith-linux/regolith-desktop/issues/352. regolith-i3xrocks-config (3.1.2-1) bionic; urgency=medium [ Leo Palmer Sunmo ] * Polish up media-player text splitting and pango formatting (#71) regolith-i3xrocks-config (3.1.1-1) bionic; urgency=medium [ Vipul Mathur ] * Use `MemAvailable` to indicate memory usage (#70) regolith-i3xrocks-config (3.1.0-1) bionic; urgency=medium [ Bence Ferdinandy ] * fixed an error with name somehow being None * adding next-workspace regolith-i3xrocks-config (3.0.34-1) bionic; urgency=medium [ Marten Lienen ] * Exit gracefully if the focused window does not have a name (#68) regolith-i3xrocks-config (3.0.33-1) bionic; urgency=medium [ Ken Gilmer ] * regress debhelper-compat version due to build failure in launchpad. regolith-i3xrocks-config (3.0.32-1) bionic; urgency=medium [ Ken Gilmer ] * Downgrade debhelper version to appease launchpad. * Remove compat file in attempt to appease debuild. regolith-i3xrocks-config (3.0.31-1) bionic; urgency=medium [ Ken Gilmer ] * Downgrade debhelper version to appease launchpad. regolith-i3xrocks-config (3.0.30-1) bionic; urgency=medium [ Ken Gilmer ] * Add gbp conf file, cleanup. regolith-i3xrocks-config (3.0.29-1) bionic; urgency=medium [ Ken Gilmer ] * Package: @cheginit's new todo status indicator based on td-cli. regolith-i3xrocks-config (3.0.28-1) bionic; urgency=medium [ Ken Gilmer ] * Package: @buck10's major rework of keyboard-layout. regolith-i3xrocks-config (3.0.27-1) bionic; urgency=medium [ Ken Gilmer ] * Package: Removed verbose output from net-traffic script (#62) regolith-i3xrocks-config (3.0.26-2) bionic; urgency=medium [ Ken Gilmer ] * Update i3xrocks-focused-window-name to use consistent python library name. regolith-i3xrocks-config (3.0.26-1) bionic; urgency=medium [ Taher Chegini ] * Add todo blocklet (#54) [ Ken Gilmer ] * Initial upstream branch. * New upstream version 3.0.25 regolith-i3xrocks-config (3.0.25-2) bionic; urgency=medium * Trying w/ debhelper v11 based on build error. regolith-i3xrocks-config (3.0.25-1) bionic; urgency=medium * Package changes by @moritzheiber: ** Fix button clicks blocklets ** Also fix network bandwidth calculation/shellcheck errors in net-traffic script regolith-i3xrocks-config (3.0.24-1) bionic; urgency=medium * Package @moritzheiber's fixes for disk-capacity and other blocks. * Package @cjohnston1158 additions to net-traffic. regolith-i3xrocks-config (3.0.23-1) bionic; urgency=medium * Add info indicator missed when moving to conf.d config. regolith-i3xrocks-config (3.0.22-2) bionic; urgency=medium * Fixes to weather status for ambiguous city names and cities of multiple words. ######################################## # Release Notes for regolith-rofi-config ######################################## regolith-rofi-config (1.3.1-1) bionic; urgency=medium [ Ken Gilmer ] * Fix look-selector regolith-rofi-config (1.3.0-1) bionic; urgency=medium [ Ken Gilmer ] * Add script to view and select Looks. Minor cleanup. Addresses https://github.com/orgs/regolith-linux/projects/12. regolith-rofi-config (1.2.6-1) bionic; urgency=medium [ Ken Gilmer ] * Add gbp config file. ######################################## # Release Notes for regolith-rofication ######################################## regolith-rofication (1.2.3-1) bionic; urgency=medium [ Ken Gilmer ] * Remove scripts that do not apply to user sessions regolith-rofication (1.2.2-2) focal; urgency=medium * Add git-buildpackage config ######################################## # Release Notes for regolith-styles ######################################## regolith-styles (2.6.13-1ubuntu2) bionic; urgency=medium [ Ken Gilmer ] * More tweaks to icons for material design based looks regolith-styles (2.6.12-1ubuntu1) bionic; urgency=medium [ Ken Gilmer ] * Update material design icon-based looks to use fonts-materialdesignicons-webfont 1.6 mappings regolith-styles (2.6.11-1) bionic; urgency=medium [ Ken Gilmer ] * Add regolith.look Xres entry for currently set look. regolith-styles (2.6.10-1) bionic; urgency=medium [ Ken Gilmer ] * If Regolith user root Xres file exists, move old copy to tmp instead of aborting. Sort looks. Misc cleanup. regolith-styles (2.6.9-1) bionic; urgency=medium [ Ken Gilmer ] * Check a flag before executing gnome-terminal profile script. Fixes https://github.com/regolith-linux/regolith-desktop/issues/471. regolith-styles (2.6.8-1) bionic; urgency=medium [ Ken Gilmer ] * Update term colors for Dracula for more variance and remove conflict for color 11. Addresses https://github.com/regolith-linux/regolith-styles/issues/32. regolith-styles (2.6.7-1) bionic; urgency=medium [ Ken Gilmer ] * Change selected item background color to addresss https://github.com/regolith-linux/regolith-styles/issues/23. regolith-styles (2.6.6-1) bionic; urgency=medium [ Ken Gilmer ] * Add next-workspace glyph for missing looks. Change sound, mute, ram glyphs for fontawesome looks. regolith-styles (2.6.5-1) bionic; urgency=medium [ Ken Gilmer ] * Fix font dependency for pop-os. Cleanup control file. regolith-styles (2.6.4-1) bionic; urgency=medium [ Ken Gilmer ] * Add package for regolith-look-pop-os. regolith-styles (2.6.3-1) bionic; urgency=medium [ Aditya Wagh ] * Create Pop!_OS Style (#29) [ Ken Gilmer ] * Update gtk theme name for consistency. * Add packaging data for pop-os look. regolith-styles (2.6.2-1) bionic; urgency=medium * Specify glyph for next-workspace status indicator for fontawesome and materialdesign. regolith-styles (2.6.1-1) bionic; urgency=medium [ Ken Gilmer ] * Package the dracula look. regolith-styles (2.6.0-1) bionic; urgency=medium [ Drew DeVore ] * Create Dracula Theme (#30) [ Julius Francisco ] * Remove user specific path (#31) regolith-styles (2.4.27-1) bionic; urgency=medium [ Ken Gilmer ] * Fix typo in package file. regolith-styles (2.4.26-1) bionic; urgency=medium [ Ken Gilmer ] * Fix gruvbox missing files on install. regolith-styles (2.4.25-1) bionic; urgency=medium [ Ekans ] * Create gruvbox style (#25) [ Ken Gilmer ] * Add packaging for gruvbox. regolith-styles (2.4.24-1) bionic; urgency=medium [ Chua Hou ] * Balance workspace name by adding space at end (#20) regolith-styles (2.4.23-1) bionic; urgency=medium [ Ken Gilmer ] * Add gbp conf file, cleanup. ######################################## # Release Notes for regolith-system ######################################## regolith-system (1.4.0.4-1) focal; urgency=medium [ Ken Gilmer ] * Add gbp conf file, cleanup. ######################################## # Release Notes for regolith-unclutter-xfixes ######################################## regolith-unclutter-xfixes (1.5-2) bionic; urgency=medium [ Ken Gilmer ] * Fix linter warning * Revert \u0026quot;Remove master files\u0026quot; regolith-unclutter-xfixes (1.5-1) disco; urgency=medium [ Ken Gilmer ] * Initial release ######################################## # Release Notes for remontoire ######################################## remontoire (1.4.0-1) bionic; urgency=medium [ Ken Gilmer ] * Specify font for windows glyph in stylesheet. * Increase buffer to 128Kb to handle larger i3 config files * Add feature to consume for stdin and specify arbitrary string prefix for more config file format support. * Fix window positioning in multi-monitor setups. ######################################## # Release Notes for td-cli ######################################## td-cli (1.2.4-7) bionic; urgency=medium * Initial release ######################################## # Release Notes for xrescat ######################################## xrescat (1.2.1-1) bionic; urgency=medium [ Ken Gilmer ] * Cleanup lintian warnings. * Version bump to appease launchpad xrescat (1.2.0-1) bionic; urgency=medium [ Jeremy Coghill ] * added logic to exclude surrounding double quotes from returned strings to allow for the use of leading and trailing spaces in resources. updated version number. updated man page [ Ken Gilmer ] * Update README for new double quote handling. Add gbp config. Cleanup. ","excerpt":"Regolith R1.5 is a feature release which includes several improvements and optimizations. To …","ref":"https://regolith-linux.org/docs/reference/releases/regolith-1.5-release-notes/","title":"1.5 Release Notes"},{"body":"Based on your preferred installation method, follow one of the following two sections to install Regolith. Unlike previous versions of Regolith, PPA and ISO installs result in different configurations. The PPA install favors coexistence with the existing Ubuntu desktop, while the ISO release optimizes for less resource utilization. Specifically, the ISO install is roughly 1Gb smaller and cold start RAM usage is reduced by about 200Mb as compared to the PPA installation.\nOption 1: Regolith Linux via Installer At this time an installer for Regolith 1.5 is not available, however the 1.4.1 installer can be upgraded to 1.5.\n Download an ISO image of Regolith R1.4.1  and then use an OS installation tool such as USB Creator to write the downloaded file into a USB device. Here are Ubuntu guides for performing this action in Windows, Mac, and Ubuntu. Reboot the computer and select the USB flash drive to boot from. Install or run the live environment by providing information when prompted during the setup process. See this tutorial to learn more about the installation process. When prompted, reboot the computer and login to your new Regolith environment!  The system will automatically upgrade to Regolith 1.5 with the following commands:\n$ sudo apt update \u0026amp;\u0026amp; sudo apt dist-upgrade Option 2: Regolith Desktop via Repository (PPA)  Add the Regolith release PPA to your system: (See below about PPA sources for other package archives.)   $ sudo add-apt-repository ppa:regolith-linux/release  Install the Regolith desktop package:\nSee below about other desktop packages available.   $ sudo apt install regolith-desktop-standard # or regolith-desktop-mobile for laptops  Reboot the computer, and when logging in select the \u0026ldquo;Regolith\u0026rdquo; session in the gear menu (⚙️):  From this point, please proceed to the next section, configuration to learn about the most common changes people like to make to Regolith.\nUpgrades Regolith 1.4.1 -\u0026gt; Regolith 1.5 If your system already has added the regolith-linux/release PPA, then upgrading is just matter of performing an upgrade:\n$ sudo apt update \u0026amp;\u0026amp; sudo apt dist-upgrade After performing the update, log back in to your system. However, if you have staged your own i3 config file or Xresources root, read the below section Upgrading with Customizations.\nRegolith 1.0 - 1.2 -\u0026gt; Regolith 1.4 To upgrade from Regolith 1.0 - 1.2, the PPA URL must be changed and then new package versions are applied by the package manager:\n$ sudo add-apt-repository --remove ppa:kgilmer/regolith-stable $ sudo add-apt-repository ppa:regolith-linux/release $ sudo apt update \u0026amp;\u0026amp; sudo apt dist-upgrade After performing these steps, you'll need to log out and back again.\nUpgrading with Customizations When updating from a major or minor version (eg 1.2 to 1.3), it is often the case that new Xresource values and other config files have been updated. Existing Xresource and config files such as the i3 config file will need to be updated in order for the upgrade to function properly. If you've customized any Regolith config files or created a stand-alone Xresource file (~/.Xresources-regolith), these may need to be updated to take the upgraded files into account. A simple approach to doing this is to move them elsewhere, perform the upgrade, and then reintegrate any desired customizations into the new files:\n$ mkdir ~/regolith-backup $ mv ~/.Xresources-regolith ~/regolith-backup $ mv ~/.config/regolith ~/regolith-backup Once these steps are performed, logging back in should result in a \u0026ldquo;stock\u0026rdquo; instance of Regolith. From there, any changes desired to be reintegrated can be done by editing the new versions of the Regolith config files that exist in the /etc/regolith directory.\nEdits to /etc/regolith/... files If you've taken shortcuts and manually edited files owned by root in /etc/regolith or elsewhere, the packaging tool may not update the files, nor mention that stale files have been left. Even removing the package via apt remove ... may not result in a clean system. In this case, use the purge command to remove the package and manually delete any left over files. For example, to clean up the i3 config file:\n$ sudo apt purge regolith-i3-gaps-config $ sudo rm -Rf /etc/regolith/i3 # be sure to backup any important changes $ sudo apt install regolith-i3-gaps-config Troubleshooting Status indicators missing after Upgrade Regolith 1.4 changes the way in which blocks are installed and configured. This change is necessary to cleanly support the arm64 architecture and make it simple to swap out components like the notification subsystem. From 1.4 onward, blocks are installed by the package manager. See this HowTo on adding and configuring blocks.\nUpgrading Ubuntu The Ubuntu upgrade process automatically removes all PPAs from the system, including Regolith. The Regolith PPA must be re-added once the Ubuntu upgrade completes.\n If the standard Ubuntu session is not installed, install it:$ sudo apt install ubuntu-session. (If you have it already installed this should cause no harm.) Perform the upgrade to the latest Ubuntu version. After rebooting, log into the stock Ubuntu session (not Regolith). Add the Regolith PPA, as the installation process removed PPAs:$ sudo add-apt-repository ppa:regolith-linux/release Upgrade Regolith to the latest version:$ sudo apt upgrade \u0026amp;\u0026amp; sudo apt install regolith-desktop-standard Reboot, and now select the Regolith session at the login screen.  NOTE: Some users have reported that regolith-desktop is automatically uninstalled during the upgrade. If this happens, simply run sudo apt install --reinstall regolith-desktop-standard after the upgrade completes to restore the Regolith desktop session.\nReinstallation In the case that the Regolith desktop environment becomes corrupted or otherwise unbootable, follow these steps to reset it. No user files will be removed as part of this process:\n Login to the stock Ubuntu session. If this session is not available, install it with sudo apt install ubuntu-session. If you are unable to login, type ctrl alt F2 to access a TTY. After installing ubuntu-session, you will have the option to select the Ubuntu session type in the login screen. Uninstall Regolith from within the Ubuntu session:  $ sudo apt purge regolith-* $ sudo apt autoremove $ rm -Rf ~/.config/regolith/flags Verify that no regolith packages are still installed with apt list --installed | grep -i regolith. The command should not return any packages. If it does, manually uninstall them with sudo apt purge \u0026lt;package\u0026gt;. Reinstall Regolith:  $ sudo apt install regolith-desktop i3xrocks-net-traffic i3xrocks-cpu-usage i3xrocks-time #also consider i3xrocks-battery i3xrocks-memory i3xrocks-weather Reboot the computer, and when logging in select the \u0026ldquo;Regolith\u0026rdquo; session in the gear menu. At this point you can remove ubuntu-session if you don't want the stock GNOME session (optional).  Uninstallation of regolith-desktop Simply follow these steps to remove Regolith Desktop installed via PPA from your system:\n Log out of the Regolith session and into the default Ubuntu session. Open a terminal and run:  $ sudo apt purge regolith-desktop \u0026amp;\u0026amp; sudo apt autoremove Now remove the PPA:  $ sudo add-apt-repository --remove ppa:regolith-linux/release You can now safely delete the directory ~/.config/regolith.  PPA Sources There are 4 sources for Regolith packages. The release PPA is recommended for most users, but another may be better for you based on your needs. Here is a description of each PPA.\n   Name PPA URI Freshness Stability Description     Unstable ppa:regolith-linux/unstable Very High Low The unstable PPA is recommended for project developers and anyone that's alright with troubleshooting their own system and doesn't mind some problems from time to time.   Stable ppa:regolith-linux/stable High Medium The stable PPA is for those that would like the latest features, even between official releases.   Release ppa:regolith-linux/release Low High The release PPA provides bug fixes as they occur and feature updates upon release.   r1.3 ppa:regolith-linux/r1.3 Very Low Very High The r1.3 PPA is locked to the 1.3 release and will not be updated except for critical bug fixes.    Desktop Packages Starting with Regolith 1.5, there are a few different desktop packages that users can choose from to get specific package selections for their system and use case.\n   Package Description     regolith-desktop Legacy package, no status indicators. Not recommended for new users.   regolith-desktop-standard A reasonable set of default packages for desktop users.   regolith-desktop-minimal The bare minimum package set for power users. Not recommended.   regolith-desktop-mobile Some additional packages on top of standard for laptop users.   regolith-desktop-complete Includes all of the official looks and status indicators available.    ARM support Regolith packages are built for i386, amd64, arm64, and armhf architectures. A stand-alone installer is not available for ARM-based systems such as the Rasberry Pi, however Regolith can be installed via PPA into any existing Ubuntu system running on the supported architectures. See above about installing Regolith via PPA.\n","excerpt":"Based on your preferred installation method, follow one of the following two sections to install …","ref":"https://regolith-linux.org/docs/getting-started/install/","title":"Install"},{"body":"   Action Key Binding     Launch - Application  ⊞ Win Space   Launch - Browser  ⊞ Win Shift Enter   Launch - Command  ⊞ Win Shift Space   Launch - File Browser  ⊞ Win Shift n   Launch - File Search  ⊞ Win Alt Space   Launch - Notification Viewer  ⊞ Win n   Launch - Terminal  ⊞ Win Enter   Launch - This Dialog  ⊞ Win Shift ?   Modify - Bluetooth Settings  ⊞ Win b   Modify - Carry Window to Workspace 1 - 10 ⊞ Win Alt 0..9   Modify - Carry Window to Workspace 11 - 19  ⊞ Win Alt Ctrl 1..9   Modify - Containing Workspace  ⊞ Win Ctrl Shift ↑ ↓ ← →   Modify - Display Settings  ⊞ Win d   Modify - Load Window Layout  ⊞ Win .   Modify - Move Window to Workspace 1 - 10  ⊞ Win Shift 0..9   Modify - Move Window to Workspace 11 - 19 ⊞ Win Ctrl Shift 1..9   Modify - Move to Scratchpad  ⊞ Win Ctrl m   Modify - Next Window Orientation  ⊞ Win Backspace   Modify - Save Window Layout  ⊞ Win ,   Modify - Settings  ⊞ Win c   Modify - Tile/Float Focus Toggle  ⊞ Win Shift t   Modify - Toggle Bar  ⊞ Win i   Modify - Wifi Settings  ⊞ Win w   Modify - Window Floating Toggle  ⊞ Win Shift f   Modify - Window Fullscreen Toggle  ⊞ Win f   Modify - Window Layout Mode  ⊞ Win t   Modify - Window Position  ⊞ Win Shift k j h l   Modify - Window Position  ⊞ Win Shift ↑ ↓ ← →   Navigate - Next Workspace  ⊞ Win Tab   Navigate - Next Workspace  ⊞ Win Alt →   Navigate - Previous Workspace  ⊞ Win Alt ←   Navigate - Previous Workspace  ⊞ Win Shift Tab   Navigate - Relative Window  ⊞ Win k j h l   Navigate - Relative Window  ⊞ Win ↑ ↓ ← →   Navigate - Scratchpad  ⊞ Win Ctrl a   Navigate - Window by Name  ⊞ Win Ctrl Space   Navigate - Workspace 11 - 19  ⊞ Win Ctrl 1..9   Navigate - Workspaces 1-10  ⊞ Win 0..9   Resize - Enter Resize Mode  ⊞ Win r   Session - Exit App  ⊞ Win Shift q   Session - Lock Screen  ⊞ Win Escape   Session - Logout  ⊞ Win Shift e   Session - Power Down  ⊞ Win Shift p   Session - Reboot  ⊞ Win Shift b   Session - Refresh Session  ⊞ Win Shift r   Session - Reload i3 Config  ⊞ Win Shift c   Session - Restart i3  ⊞ Win Ctrl r   Session - Sleep  ⊞ Win Shift s   Session - Terminate App  ⊞ Win Alt q    ","excerpt":"Action Key Binding     Launch - Application  ⊞ Win Space   Launch - Browser  ⊞ Win Shift Enter …","ref":"https://regolith-linux.org/docs/reference/keybindings/","title":"Keybindings"},{"body":"Looks provided by Regolith have the package prefix regolith-look-. For example, another look sporting the Solarized color palette and a different GTK theme and icon set is called regolith-look-solarized-dark.\nFinding Looks All look packages using this naming scheme can be found via the following command:\n$ apt search ^regolith-look- Installing a Look Looks can be installed via the apt tool or with any tool that can install Debian packages on the system, such as synaptic. For example, this command will install the Ubuntu look:\n$ sudo apt install regolith-look-ubuntu If you pay attention to the output of apt you may notice that in addition to installing the look, fonts-font-awesome will also be installed. As a feature, looks are able to depend on any resources or artifacts they require as packages. This ensures that once a look is installed, the user does not need to care about what other things that look make require to function properly. It's taken care of by the package manager.\nSwitching to a Look Once a look has been installed, super alt l will bring up a dialog in which a Look can be set from all that are installed.\nSetting looks via the command line is also supported. A utility command called regolith-look can be used to enable it. To enable the ubuntu look installed in the previous step, try the following:\n$ regolith-look set ubuntu $ regolith-look refresh The command will mention that it created a file in your user directory. This file is an Xresource file, and it's stored in a specific path such that i3-gnome-flashback will look for it upon session start. Let's have a look at the file:\n$ cat ~/.Xresources-regolith #include \u0026#34;/etc/regolith/styles/ubuntu/root\u0026#34; In essence, our Xresource file is simply pointing to another Xresource file. Lets look there:\n$ cat /etc/regolith/styles/ubuntu/root ! -- Styles - Colors #include \u0026#34;/etc/regolith/styles/ubuntu/color\u0026#34; ! -- Styles - Fonts #include \u0026#34;/etc/regolith/styles/ubuntu/typeface\u0026#34; ! -- Styles - Theme #include \u0026#34;/etc/regolith/styles/ubuntu/theme\u0026#34; ! -- Applications ! These files map values defined above into specific app settings. #include \u0026#34;/etc/regolith/styles/st-term\u0026#34; #include \u0026#34;/etc/regolith/styles/i3-wm\u0026#34; #include \u0026#34;/etc/regolith/styles/i3xrocks\u0026#34; #include \u0026#34;/etc/regolith/styles/rofi\u0026#34; #include \u0026#34;/etc/regolith/styles/gnome\u0026#34; Here we can see that there are separate Xresource files that define color, typeface and theme (icon, GTK), and these are loaded and then applied to the UI components integrated by Regolith: st (terminal), i3-wm, i3xrocks, rofi, and GNOME.\nRefreshing a Look There may be times that the UI of the system and the Regolith look get out of sync. For example, if a program sets the wallpaper or icon theme externally, this will not be reflected in the Xresource settings. Regolith will only update itself upon login if it detects of Xresource changes have been made. If you wish to force Regolith to reload the UI based on the Xresource settings, run:\n$ regolith-look refresh Learning More To dig deeper, read about Styles in the following page and have a look at the regolith-styles README.\n","excerpt":"Looks provided by Regolith have the package prefix regolith-look-. For example, another look …","ref":"https://regolith-linux.org/docs/customize/look/","title":"Look"},{"body":"Looks are a combination of Xresource definitions and associated resources such as wallpapers, GTK themes, and icons that as a whole provide the user with a distinctive user interface, all expressed as a collection of files. The default looks that ship with Regolith are natural starting points for creating new ones, but it's also possible to start from scratch as long as the required Xresource entries are defined. Ideally, looks are packaged as Debian packages with all required resources either provided by the look or added as a package dependency. By using the OS packaging system, required files and resources are ensured to be installed and available.\nRequired Files Starting from scratch, the only mandatory file for a Look as a single Xresource definition file. This file must specify entries for Regolith's required values, defined on this page. However, it's recommended to simply copy an existing look as a basis for customization, due to the compositional nature that Looks use.\nSuggested File Layout It is suggested that a look be installed in /etc/regolith/styles/\u0026lt;look name\u0026gt; and that the primary (or only) Xresource file is named root. Existing Regolith Looks decompose the Xresources into types of resources and any config specific to a UI component. For example the Cahuella Look provides definitions for GNOME (theme), color, and typeface and a specific theme for Rofi since it's configuration cannot be completely expressed via Xresource key/value pairs:\n$ find /etc/regolith/styles/cahuella -type f /etc/regolith/styles/cahuella/theme /etc/regolith/styles/cahuella/color /etc/regolith/styles/cahuella/typeface /etc/regolith/styles/cahuella/root /etc/regolith/styles/cahuella/rofi.rasi Initialization When the Regolith session loads upon login, the initialization script looks in a few places for Xresource file definitions. The regolith-look tool provides the ability for users to change looks by creating an Xresource file that simply redirects to another file via the #include directive provided by the Xresources subsystem. In this way, a Look is enabled in Regolith by providing this link between a well-known Xresource file entry point to the files specific to the custom Look.\nPackaging The ideal user experience is to install a look via a package manager tool, and then using the regolith-look tool to set it. For example:\n$ sudo apt install regolith-look-ubuntu $ regolith-look set ubuntu $ regolith-look refresh In order to achieve this flow, all runtime dependencies (fonts, GTK themes, wallpapers, etc.) must be included in the package or defined as a Debian package dependency in a debian/control file. See the regolith-styles package for further information on Debian metadata. If you're new to Debian packaging, here is an introduction.\nTesting Once you have a Look ready for testing, copy the containing directory for your files into /etc/regolith/styles, for example for a Look called orange, you may have this file layout:\n/etc/regolith/styles/orange/theme /etc/regolith/styles/orange/color /etc/regolith/styles/orange/typeface /etc/regolith/styles/orange/root /etc/regolith/styles/orange/rofi.rasi Then run regolith-look set orange \u0026amp;\u0026amp; regolith-look refresh. The UI should be updated with your new look.\n","excerpt":"Looks are a combination of Xresource definitions and associated resources such as wallpapers, GTK …","ref":"https://regolith-linux.org/docs/developer/looks/","title":"Looks"},{"body":"Regolith relies on the Xresource system to provide a consolidated interface configuration. By changing Xresource values, Regolith can be customized in ways such as updating the user interface, specifying custom behaviors, or defining a specific format for the clock.\nIn Regolith, Xresource values can be changed via two methods: supplying your own Xresource files, and overriding the existing Xresource values. The latter approach is strongly recommended, as it makes upgrading to newer versions of Regolith less likely to break. If you copy the Xresource tree completely, you'll need to integrate any breaking changes in future versions manually.\n Initialization When a Regolith session is started, Xresources are loaded in the following order:\n   File Optional Notes     ~/.Xresources Y Intended for non-Regolith settings   ~/.Xresources-regolith Y A global override to replace all Regolith settings   /etc/regolith/styles/root N The default Regolith Xresource file if ~/.Xresources-regolith does not exist   ~/.config/regolith/Xresources Y Applies specific overrides to Xresource defaults    It is recommended to use ~/.config/regolith/Xresources for customization as it requires the specification of no redundant settings, and is easier to maintain over time.\nDetermining what values can be changed The xrdb tool can be used to list the existing Xresource values. See here for a table of existing values in the R1.4.1 release. Example:\n$ xrdb -query ... gnome.icon.theme:\tMoka gnome.terminal.font:\tJetBrains Mono 12 gnome.terminal.scrollbar:\tnever gnome.wallpaper:\t/usr/share/backgrounds/ESP_016895_1525_desktop.jpg gnome.wm.theme:\tAyu-Mirage-Dark ... Examples Note that the commands presented below append text to a file. So, running the command more than once will result in duplicate lines in the file.\nExample - Update the UI for High DPI Screens By using the ~/.config/regolith/Xresources override file, we will only need to specify the values we wish to change. The xrdb tool can be used to determine what current values are set to.\n Create or add the following value to your ~/.config/regolith/Xresources file:  Xft.dpi: 192 Reload the Xresource configuration:  $ regolith-look refresh Open a new terminal to see the change take effect.  192 is just an example value, please adjust as needed.\nExample - Change i3 bar position $ xrdb -query | grep position i3-wm.bar.position:\tbottom $ echo \u0026#34;i3-wm.bar.position:\tbottom\u0026#34; \u0026gt;\u0026gt; ~/.config/regolith/Xresources $ regolith-look refresh Example - Change GTK Theme $ xrdb -query | grep gtk gnome.gtk.theme:\tAyu-Mirage-Dark $ echo \u0026#34;gnome.gtk.theme:\tAdwaita\u0026#34; \u0026gt;\u0026gt; ~/.config/regolith/Xresources $ regolith-look refresh Example - Enable System Tray $ echo \u0026#34;i3-wm.bar.trayoutput:\tprimary\u0026#34; \u0026gt;\u0026gt; ~/.config/regolith/Xresources $ regolith-look refresh Example - Use Alt instead of Win as Super $ echo \u0026#34;i3-wm-mod: Mod1\u0026#34; \u0026gt;\u0026gt; ~/.config/regolith/Xresources $ echo \u0026#34;i3-wm-alt: Mod4\u0026#34; \u0026gt;\u0026gt; ~/.config/regolith/Xresources Then Reload i3 for the change to take effect.\nExample - Launch nm-applet when i3 starts Some users prefer to use the nm-applet program to configure and manage their wireless network. i3 config file can be updated to launch any arbitrary program at start time. But, rather than copying the whole file, we can supply up to 3 programs via Xresources without having to change the i3 config file. For this to work, also make sure that the system tray is enabled (see above).\n$ echo \u0026#34;i3-wm.program.1: /usr/bin/nm-applet\u0026#34; This change requires you to log back in before the change takes effect.\nRegolith generates many of these values from a canonical set of definitions. See this readme for more details. If you find yourself updating many values, it may be more concise to create your own look instead.\n Further Reading See the reference page for configrations for more details about config files in Regolith.\n","excerpt":"Regolith relies on the Xresource system to provide a consolidated interface configuration. By …","ref":"https://regolith-linux.org/docs/howto/override-xres/","title":"Override Xresources"},{"body":"Regolith is a collection of open source components that together form a general-purpose interface for using a computer, also known as a desktop environment [1]. Many of the UI components that are used to build Regolith are independent open source projects [2] that have simply been integrated, packaged, and configured for a specific workflow and visual aesthetic. Most computer desktop environments are optimized for ease-of-use and familiarity with commercial operating systems such as Microsoft Windows or Apple's OS X. In contrast, Regolith provides a way of interacting with a computer that is optimized for user productivity and does not attempt to mimic legacy UI paradigms for familiarity.\nThe Keyboard, the Mouse, and the Monitor Regolith places emphasis on the keyboard input device over the mouse, in relation to most other desktop environments. This is for one reason: productivity. Specifically, the amount of time it takes to press a keybinding on the keyboard is less than the amount of time it takes your hand to move from the keyboard to the mouse, execute a series of clicks to get to a desired action, and then get your hands back on the keyboard. While this time difference is small, it adds up quickly due to frequent interactions.\nBut this benefit comes with a one-time cost: learning the keybindings. In exchange for this up-front cost, the user is subsequently able to perform general computer actions faster and with less foreground thought. Additionally, by pushing more of the computer actions into the user's memory, more of the computer's visual interface can be devoted to the user's applications. Put another way, the Regolith interface devotes more bandwidth to the user's application and less to the general management of the computer. And because ultimately the productive output of the user is a result of interaction with applications, the general productivity of the user is increased. This is a subjective benefit, and may be more or less important to the user.\nTiling Windows Perhaps the most user-impacting component in Regolith is the window manager, an open source project called i3-gaps (which is a customization of i3-wm). This program organizes windows into tiles. By default, i3-gaps divides the screen into sections for each window, all of which add up to the entire screen. If only one program is presenting a window, then that window occupies the entire screen. For two windows, both get an equal portion of the screen, and so on. By using keybindings, the user can tell i3-gaps to resize, move, and otherwise organize windows in other ways. A key advantage to this approach is that the user is freed from micro managing window layouts (at the cost of having to learn the keybindings).\nLaunching Applications It is common for desktop environments to display application launchers throughout the user interface, in the form of icons and text. Folders, docks, and context menus are used to present a form of menu to the user. Despite them appearing visually different, they are have one function: to launch an application. As with keybindings, in Regolith this user interface of launching apps is refined and minimized. Desktop icons, panels, and docks are not used. Rather, the user invokes the application launcher which presents a menu of applications sorted by frequency of usage. The user may begin typing the name or function of the application they intend to load and the list is filtered accordingly. In addition, frequently used applications such as terminal and browser have specific keybindings. With this UI treatment, there is no fixed overhead on the display for the presentation of application launchers. This provides the user benefit of more screen space devoted to the user's applications.\nSystem Management Modern computers are complex machines with many observable attributes. For the day-to-day operation however, most of these can be ignored. Each user has a specific subset of system state they care about, and so there is no one perfect configuration for every user. By default Regolith provides on-screen state information on the bar for the user's workspaces, keybindings help, network and CPU utilization, notifications, and the system time. More or less items can be configured by the user as needed.\nIn addition to the transient system information provided on the bar, the system configuration can be changed by the user via the Settings application. This configuration system is part of GNOME, and provides a rich set of UI pages to configure WiFi networks, Bluetooth devices, displays, and other devices.\nConfiguration Files While most of the common tasks of system management and administration are handled by graphical interfaces such as Settings, lower-level configuration is done by editing configuration files that are installed as part of Regolith. For example, to change what information is presented on the bar, or to tweak the border width of windows, editing configuration files is required. These customizations are covered in the customization section.\nWhere next?  Getting Started: Get started with Regolith The Interface: Understand how to perform actions in Regolith Keybindings: Learn the keybindings  Footnotes 1: The term came from a time when computers were large and were used on desks. That is no longer the case but we still use the term. A desktop environment is generally applicable to any computer with a keyboard, display, and some type of pointing device.\n2: See the interface page for specifics about the component Regolith is composed of.\n","excerpt":"Regolith is a collection of open source components that together form a general-purpose interface …","ref":"https://regolith-linux.org/docs/overview/","title":"Overview"},{"body":"There is nothing in Regolith Linux itself that collects any user data, either anonymously or otherwise. Because Regolith is a customization of Ubuntu Linux, any data collection that Ubuntu is doing will also be performed by Regolith Linux. This website has vanilla Google Analytics integration. Anonymity is a feature.\n","excerpt":"There is nothing in Regolith Linux itself that collects any user data, either anonymously or …","ref":"https://regolith-linux.org/docs/policy-and-process/privacy/","title":"Privacy"},{"body":"As mentioned in the Getting Started section, super space causes i3 to execute Rofi to present a list of apps. Once launched, the application selected will open a window on the currently active workspace. If other windows are already present on this workspace, they will be resized to allow the new window to also be placed without overlapping or otherwise obstructing the existing windows.\nWindow Layout super backspace can be used to toggle between horizontal and vertical layout modes, which will apply to the next launched application. In this way, windows in a workspace can divide the screen into portions relative to the desired importance of the user. A blue border will appear on the bottom or right of the window to indicate the current layout mode.\nIn addition to toggling layout orientation, existing windows can be moved relative to their neighbors with super shift ↑ ↓ ← → (arrow keys) or VIM-style arrow keys k j h l. Or, super tab and super shift tab can be used to move back and forth between active workspaces.\nWindows can also be directly moved to other workspaces. The bar will indicate all active workspaces as well as the currently focused workspace. super shift [0-9] will cause the currently focused window to be moved to the workspace number selected.\nUsers can navigate to windows via super [0-9] but can also directly navigate to a specific window with super ctrl space.\nQuit an Application Any application can be safely closed via super shift q. Crashed or otherwise unresponsive apps can be killed via super alt q.\n","excerpt":"As mentioned in the Getting Started section, super space causes i3 to execute Rofi to present a list …","ref":"https://regolith-linux.org/docs/interface/apps/","title":"Working with Applications"},{"body":"Regolith R1.4.1 is a fast follow up to 1.4 that fixes a few serious bugs, detailed on the mailing list here. In addition to the package updates, a new boot animation is provided by the package plymouth-theme-regolith that is installed by default on the ISO. The ISO also now excludes a deprecated touchpad driver that was conflicting with Settings. Existing PPA-based installations can simply get the updates via their typical package update process. Regolith Linux ISO users can update to R1.4.1 by applying regular package updates and then follow this guide to perform some manual steps if they have touchpad issues or use encrypted root file systems.\n","excerpt":"Regolith R1.4.1 is a fast follow up to 1.4 that fixes a few serious bugs, detailed on the mailing …","ref":"https://regolith-linux.org/docs/reference/releases/regolith-1.4.1-release-notes/","title":"1.4.1 Release Notes"},{"body":"   Component Default Config User Config Notes      i3-gaps /etc/regolith/i3/config ~/.config/regolith/i3/config In Regolith versions prior to 1.2 this file was in another directory.    Xresources /etc/regolith/styles/root ~/.Xresources-regolith (Global override)~/.config/regolith/Xresources (Override)~/.config/regolith/Xresources.d (User files) ~/.Xresources is also loaded but intended for properties that may also be required in other desktop sessions.    Rofi /etc/regolith/styles/lascaille/rofi.rasi Defined in the theme style file. This can also be overridden directly in the i3 file if preferred.    Bar Workspace Labels /etc/regolith/styles/i3-wm User defined     Bar status indicators /etc/regolith/i3xrocks/conf.d ~/.config/regolith/i3xrocks/conf.d Each block has it's own file. Filename determines ordering.    Picom (Compton) Compositor /etc/regolith/compton/config ~/.config/regolith/compton/config User config added in 1.4    LightDM GTK Greeter /usr/share/lightdm/lightdm-gtk-greeter.conf.d/02_regolith.conf N/A This file only exists if the regolith-lightdm-config package is installed.     Load Sequence Upon session start, Regolith loads configuration files in the following order:\n /usr/bin/i3-gnome-flashback executes after successful login Load Xresource file ~/.Xresources if it exists. Load Xresource file ~/.Xresources-regolith if it exists. Merge any values from file ~/.config/regolith/Xresources if it exists. If first time session has loaded, initialize system. Compare current Xresource db against last saved hash, if different, reload GNOME settings from Xresources. Execute i3 with first config file found from following list: ~/.config/regolith/i3/config, /etc/regolith/i3/config, /etc/i3/config. i3 executes the UI components Rofi, i3xrocks, unclutter, regolith-compositor, Rofication, and regolith-ftue.  ","excerpt":"Component Default Config User Config Notes      i3-gaps /etc/regolith/i3/config …","ref":"https://regolith-linux.org/docs/reference/configurations/","title":"Config Files"},{"body":"This section contains the information necessary to get Regolith running on a computer. There are two primary ways of installing Regolith; via an Ubuntu-based installer and via a Personal Package Archive (PPA). Either of these methods will result in essentially the same user experience, although installing via the Ubuntu installer will result in a package selection that is different from installing vanilla Ubuntu. However by adding and removing specific packages a vanilla Ubuntu system can be configured.\nPrerequisites Ubuntu Installer  A modern computer that can boot from a USB flash drive. Free space on a local drive. The installer will allow for managing existing partitions or installing on an empty volume. An internet connection to install updates during and after installation. A monitor with at least VGA (1024 x 768) resolution. Regolith is optimized for FHD (1920 x 1080) screens. An empty USB flash drive with at least 4 Gb of storage space.  PPA  An existing Ubuntu installation with admin rights, version 18.04, 20.04, or 20.10. 100Mb of free storage space to install the Regolith desktop environment (depending on package selections). An internet connection to install updates during and after installation.  Deciding on Installation Method If you already have an Ubuntu system of a supported version, than adding Regolith via PPA is the faster and less disruptive method. The Ubuntu installer method is better for starting from scratch, installing into a virtual machine, or just ensuring that any existing software is not conflicting with Regolith. Some users have had issues with getting Regolith to work properly with other Ubuntu derivative desktop environments they've installed on their system. Installing a fresh instance can sidestep these potential issues.\n","excerpt":"This section contains the information necessary to get Regolith running on a computer. There are two …","ref":"https://regolith-linux.org/docs/getting-started/","title":"Getting Started"},{"body":"Regolith 1.3 introduces the integration of Rofication into the environment. Previous versions relied on a built-in notification system within gnome-flashback but the UI was distracting. Rofication relies on a notification daemon and Rofi-based front end. A block in the bar shows the number of notifications the user has. When a new notification is received, this number is incremented by one. There is no other alert or other UI that would notify the user of the new message. If a more agressive notification UI is desired, dunst is recommended.\nManaging Notifications Next to the bell icon in the bar is the current number of notifications. To view and delete them, select super n and a menu will load. Notifications can be read and then deleted with delete and the notification window can be dismissed with escape. All low-priority notifications can be deleted at once with shift delete from within the notification menu.\n","excerpt":"Regolith 1.3 introduces the integration of Rofication into the environment. Previous versions relied …","ref":"https://regolith-linux.org/docs/interface/notifications/","title":"Notifications"},{"body":"   Package Description     i3-snapshot Save and restore window layouts.   i3xrocks A fork of i3blocks that enables Xresources integration.   regolith-assets An optional package with additional wallpaper.   regolith-builder Scripts and metadata for building and hosting Regolith.   regolith-compositor-compton-glx A compositor configuration for Picom (recently renamed from Compton).   regolith-compositor-xcompmgr A compositor configuration for xcompmgr.   regolith-compositor-none A compositor configuration for no compositor.   regolith-desktop The legacy (pre 1.5) root meta package for Regolith by which all other default packages are referenced.   regolith-desktop-meta The virtual package from which one of the following desktop packages can be installed into:   regolith-desktop-standard The baseline desktop package that installs a reasonable subset of all Regolith functionality.   regolith-desktop-complete This installs all possible packages and adds roughly 180Mb to the installation footprint.   regolith-desktop-minimal This package is for system tweakers. Some functionality may be broken with this package, but it allows users to remove more from their system.   regolith-desktop-mobile A slight tweak to the standard package, this adds support for features common on laptops such as batteries.   regolith-gdm3-theme An optional package for an updated login screen.   regolith-gnome-flashback A customization of i3-gnome-flashback for Regolith. Session init logic lives here.   regolith-i3-gaps-config Regolith's version of the i3 config file.   regolith-i3xrocks-config Configuration for the status indicators in the bar.   regolith-linux.github.io This website.   regolith-rofication A customization of the Rofication project.   regolith-st The st-term with some patches applied.   regolith-styles Metadata that describes the UI look in Regolith including several binary packages for specific looks.   remontoire A GTK+ keybinding viewer that integrates with i3.   xrescat cat for Xresources.    Diving Deeper For those looking for more specifics, a machine-readable form of all packages and branch versions associated with a release are defined in this repo. For example, R1.3's packages are defined here.\n","excerpt":"Package Description     i3-snapshot Save and restore window layouts.   i3xrocks A fork of i3blocks …","ref":"https://regolith-linux.org/docs/reference/packages/","title":"Packages"},{"body":" Regolith 1.3.1 and above: If you only wish to override or provide new Xresource values, staging configs is no longer required. See this page for more details.\n Regolith uses a number of files in /etc/regolith to determine the behavior and look of various components. While it's possible to simply edit these files directly, users who do so run the risk of having their configurations overwritten upon future updates. The Debian packaging system should ask users if they wish to take updates or keep the existing files, but this may have unintended side effects if users take partial updates of files. As such Regolith, upon login, will look for user-staged version of configuration files and load those instead of the defaults if they exist. This is recommended over editing the files in /etc/regolith directly as it gives the user more control over their configuration. This page describes how to create these files.\nDepending on what you wish to change, you may need your own copy if the i3 config file, Xresources, or both. If you're looking to change the way Regolith looks, Xresources may be all you need. If you want to update or add keybindings or swap out components, you'll most likely need to stage the i3 config file.\ni3 Config  Copy the default Regolith i3 config file into your home directory:  $ mkdir -p ~/.config/regolith/i3 $ cp /etc/regolith/i3/config ~/.config/regolith/i3/config Log out and back in. The Regolith session will automatically detect your user-staged file and use that over the default in /etc/regolith/i3.  Verify the Change  Verify by running i3 --moreversion and noting the config file that is printed as a result. It should be the copy you just created. If not, be sure the path is correct. It must exactly be ~/.config/regolith/i3/config for Regolith to load it.  Regolith Styles  Copy the root Regolith Xresource file into your home directory:  $ cp /etc/regolith/styles/root ~/.Xresources-regolith Log out and back in. The Regolith session will automatically detect your user-staged file and use that over the default in /etc/regolith/styles.  Note that this root file is simply a reference to other styles that are broken down by the thing they are designed to style. For example, if you wish to customize the look of i3, you will need to also copy /etc/regolith/styles/i3-wm into your user directory and then update the reference to the new file in your ~/.Xresources-regolith.\n","excerpt":"Regolith 1.3.1 and above: If you only wish to override or provide new Xresource values, staging …","ref":"https://regolith-linux.org/docs/howto/stage-configs/","title":"Stage Config Files"},{"body":"The i3bar is the UI component that is displayed by default at the bottom of the screen. To the left is workspace information. This is built-in to i3bar as it's designed to be directly integrated with i3-wm. On the right are various status indicators, which may vary based on which packages are installed. It's common to have the time (i3xrocks-time), notifications (regolith-rofication), and network I/O (i3xrocks-net-traffic). This page describes how to add new status indicators.\nExecution In Regolith, status indicators are simply small scripts that run once or on an interval that return text when they complete. This text is interpreted by i3bar and displayed. The program that executes the scripts is called i3xrocks. It is a fork of another program, i3blocks that adds two features that were necessary to support the Regolith desktop environment:\n Reading values from Xresources. Expressing configuration as a set of files, rather than one single file.  i3xrocks is invoked by i3-wm from within the i3 config file. Once started, i3xrocks reads it's configuration from the files it finds in /etc/regolith/i3xrocks/conf.d (or a user directory, see this reference page for details.) The configuration files in /etc/regolith/i3xrocks/conf.d describe, per status indicator, the path to the script to execute, the interval by which to run the script, and other variables that the script may need for it's configuration. Where possible, Xresources should be used to read configuration from, making updates and customizations more consistent.\nScripts The scripts that run are typically stored at /usr/share/i3xrocks/ and are generally executable from the command line. For example:\n$ /usr/share/i3xrocks/time \u0026lt;span color=\u0026#34;#E6E1CF\u0026#34;\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span font_desc=\u0026#34;JetBrains Mono Medium 13\u0026#34; color=\u0026#34;#E6E1CF\u0026#34;\u0026gt; 05/30 19:06 \u0026lt;/span\u0026gt; You'll notice here some HTML-like formatting, and then the actual date and time. The structure of the data returned by the script can be any text, but to maintain a consistent look in Regolith we use the following convention:\n\u0026lt;icon\u0026gt; \u0026lt;text\u0026gt; The icon is represented by a font icon, or, a font that typically contains symbols rather than text. By default Regolith uses the fonts-materialdesignicons-webfont and other looks use fonts-font-awesome. The particular font and character used by the icon is defined by regolith-look Xresource definitions. For example, by default the icon for time is defined here. When providing your own icon, you can just use one from the installed font for your preferred look, or create a PR in the regolith-styles repo to include your new icon (with a Xresource name) for other users.\nOutput Before we saw the output of the time script. Let's deconstruct it:\n\u0026lt;span color=\u0026#34;#E6E1CF\u0026#34;\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span font_desc=\u0026#34;JetBrains Mono Medium 13\u0026#34; color=\u0026#34;#E6E1CF\u0026#34;\u0026gt; 05/30 19:06 \u0026lt;/span\u0026gt; The first span block defines the icon of the status indicator. Notice how it does not specify a font. This is because, without a font specification, the default is used. In the case of Regolith looks, the default font is whatever icon font is specified in Xresources. In Regolith 1.4.1 and 1.5, the default look is lascaille and the icon font is fonts-materialdesignicons-webfont.\nThis color is read from Xresources in the script, rather than hardcoded. This allows the look of the status indicator to match the installed user's look.\nThe second span block contains the textual status information. Again we have a color (coming from Xresources), but also now a font. This is the secondary font passed to i3bar in the i3-wm config file. It also comes from Xresources. In general, to load icon character, the icon font and text font, as well as the colors, use the xrescat program with the appropriate keys. For the time script it is this:\nLABEL_ICON=${icon:-$(xrescat i3xrocks.label.time )} LABEL_COLOR=${label_color:-$(xrescat i3xrocks.label.color \u0026#34;#7B8394\u0026#34;)} VALUE_COLOR=${color:-$(xrescat i3xrocks.value.color \u0026#34;#D8DEE9\u0026#34;)} VALUE_FONT=${font:-$(xrescat i3xrocks.value.font \u0026#34;Source Code Pro Medium 13\u0026#34;)} Note the 3rd parameter to i3xrocks is a default value in the case that the key is undefined at runtime.\nButtons Status indicators can optionally perform actions when users click on them on the bar. To do this, test if the BUTTON variable has been set, and of so act accordingly. In the case of time, clicking the status causes the date/time preference dialog from GNOME to be loaded:\nif [ \u0026#34;x${BUTTON}\u0026#34; == \u0026#34;x1\u0026#34; ]; then /usr/bin/i3-msg -q exec \u0026#34;/usr/bin/gnome-control-center --class=floating_window datetime\u0026#34; fi conf.d Scripts Once the script that generates the status text is ready, another configuration file is needed to tell i3xrocks to execute the script. This file should start with a number between 10 - 100 signifying where by default it should be positioned on the bar (bigger numbers are farther to the right.), and then the name of the script. Looking again at the time config block (in /etc/regolith/i3xrocks/conf.d/90_time):\n# Date Time [time] interval=10 NOTE: each script must end with a linefeed.\nBy default, i3xrocks is configured to look in the /usr/share/i3xrocks directory for scripts. So [time] tells i3rocks to execute a script /usr/share/i3xrocks/time. The interval is used to know when to call the script, on a timer. See the i3blocks documentation for more fields and details about this configuration format.\nExamples File Count To create a script that counts the number of text files in the /tmp directory, the command we could use is ls /tmp | wc -l. This returns a number of files and directories. We can make a script (/usr/share/i3xrocks/tmp-count) with the correct formatting like so:\n#!/bin/bash  LABEL_ICON=${icon:-$(xrescat i3xrocks.label.tmpfilecount T)} LABEL_COLOR=${label_color:-$(xrescat i3xrocks.label.color \u0026#34;#7B8394\u0026#34;)} VALUE_COLOR=${color:-$(xrescat i3xrocks.value.color \u0026#34;#D8DEE9\u0026#34;)} VALUE_FONT=${font:-$(xrescat i3xrocks.value.font \u0026#34;Source Code Pro Medium 13\u0026#34;)} COUNT=$(ls /tmp | wc -l) echo \u0026#34;\u0026lt;span color=\\\u0026#34;${LABEL_COLOR}\\\u0026#34;\u0026gt;$LABEL_ICON\u0026lt;/span\u0026gt;\u0026lt;span font_desc=\\\u0026#34;${VALUE_FONT}\\\u0026#34; color=\\\u0026#34;${VALUE_COLOR}\\\u0026#34;\u0026gt;$COUNT\u0026lt;/span\u0026gt;\u0026#34; Notice how LABEL_ICON has a new key name ending with tmpfilecount and a default value of T. Until/unless regolith-styles is updated as mentioned above to include this new key, general users will not have i3xrocks.label.tmpfilecount defined in their system, so the fallback of T will be used.\nNext we need a configuration script (/etc/regolith/i3xrocks/conf.d/50_tmp-count) that integrates our status script into the desktop:\n# File Count in /tmp [tmp-count] interval=60 This config file will render roughly in the middle of the right side of the bar, and will be updated every minute.\nFurther Reading As i3xrocks is based on i3blocks with a few minor additions, it is safe to use the excellent and extensive documentation available for the project. Just keep in mind the modular configuration files and that you can reference Xresource keys directly from the config files.\n","excerpt":"The i3bar is the UI component that is displayed by default at the bottom of the screen. To the left …","ref":"https://regolith-linux.org/docs/developer/status-indicators/","title":"Status Indicators"},{"body":"As stated in the repo readme, Regolith styles are a convention by which a set of files which define key/value pairs are loaded into memory and can be queried by xrdb or xrescat. Xresources employes the C preprocessor to allow for behaviors such as including more files, defining constants, and conditional expressions. In Regolith, only two preprocessor directives are used: #include and #define. #include statements are used to reference other files. Collections of files called looks were covered in the previous section of this guide. #define statements simply allow for a symbolic value to be replaced by a literal value, like defining a variable.\nDefines To maximize the re-use of theme information in Regolith, Xresources are divided into two categories of files: definition files and application files. The definition files make heavy use of the define directive. They essentially bind an abstract key, such as \u0026ldquo;blue\u0026rdquo; or \u0026ldquo;terminal font\u0026rdquo; to a literal value, such as #0000FF or Source Code Pro Medium. In making changes to files, it's expected that these defines will change. The user may wish to specify a different icon set, or typeface, and would do so by modifying or creating a new definition file. Once this file is created, it needs to be referenced by a top-level Xresource file in ~/.Xresource-regolith.\nNote: when referencing other files in Xresources via the #include directive, shortcuts like $HOME and ~/ are not available. Absolute paths are required.\n Application Xresource files As mentioned previously, in /etc/regolith/styles lives a number of Xresources, including those for specific applications such as st or i3-wm. Opening these files will show a mapping of the abstract keys provided by the defines files to application specific keys. In this way, the general description of the look can be mapped to any UI component or application that can read from Xresources.\nLoading Order The /usr/bin/regolith-session-init script will check for the first Xresources file it finds in the following order:\n ~/.Xresources-regolith /etc/regolith/styles/root  In addition to a Regolith Xresources file, ~/.Xresources will also be loaded if it exists upon session start.\nAfter loading a root Xresource file, the session init script then merges any entries found in the ~/.config/regolith/Xresources file. This file provides a quick way of simply overriding a few values without having to copy the entire set of resource definitions.\nReloading Xresources The regolith-look command can be used to reload all Xresource entries as they are loaded upon session initialization:\n$ regolith-look refresh Alternatively, the xrdb command can be used to refresh specific Xresource files after they have changed. For example, to reload the user Xresource file run:\n$ xrdb -merge ~/.Xresources-regolith Verification You can test that a change has been made to your Xresources file by querying it from the command line. If a change was made to key foo.bar then the following command will return it's current value, or empty if unset:\n$ xrescat foo.bar empty ","excerpt":"As stated in the repo readme, Regolith styles are a convention by which a set of files which define …","ref":"https://regolith-linux.org/docs/customize/styles/","title":"Styles"},{"body":"Configuration Files Regolith Linux is continually being updated with bug fixes and feature enhancements. Regolith's default configuration files live in /etc/regolith/. To customize these files, make copies in your user directory and make changes there. These copied files in the user directory are owned by the user and will not be modified by Regolith.\nPackage Updates Notification of upcoming updates including those that may introduce breaking changes will be announced on the Regolith Linux Announcements mailing list.\nOnce a package has been published to the release PPA, Ubuntu's built-in package update facility will find the update and either directly apply it or ask the user if they wish to do so, depending on configuration.\nPackage Promotion Development of Regolith happens via updates to source code kept in git repos within the GitHub Regolith Organization. When a given feature or fix is ready for testing, it is published to the unstable PPA. After the change has been verified to work and not cause other problems, it is promoted to the stable PPA. Changes being preceived as high-risk will spend some additional time in stable. If a change is a feature, it will stay in stable until the next version release, but if the change is a bug fix, it will be promoted to the release PPA.\nPackage Versions For packages specific to Regolith, symver will be used. From Regolith 1.4.1 forward, symver will also be used to describe release versions. So, if a new release of Regolith will introduce some new component or configuration that is incompatible with the previous version, the major version will be bumped. Feature releases that do not introduce obvious breaking changes will be minor bumps, and bug fixes will cause a patch bump. s\n","excerpt":"Configuration Files Regolith Linux is continually being updated with bug fixes and feature …","ref":"https://regolith-linux.org/docs/policy-and-process/updates/","title":"Updates"},{"body":"Regolith 1.4.1 -\u0026gt; Regolith 1.5 If your system already has added the regolith-linux/release PPA, then upgrading is just matter of performing an upgrade:\n$ sudo apt update \u0026amp;\u0026amp; sudo apt dist-upgrade After performing the update, log back in to your system. However, if you have staged your own i3 config file or Xresources root, read the below section Upgrading with Customizations.\nRegolith 1.0 - 1.2 -\u0026gt; Regolith 1.5 To upgrade from Regolith 1.0 - 1.2, the PPA URL must be changed and then new package versions are applied by the package manager:\n$ sudo add-apt-repository --remove ppa:kgilmer/regolith-stable $ sudo add-apt-repository ppa:regolith-linux/release $ sudo apt update \u0026amp;\u0026amp; sudo apt dist-upgrade After performing these steps, you'll need to log out and back again.\nUpgrading with Customizations When updating from a major or minor version (eg 1.2 to 1.3), it is often the case that new Xresource values and other config files have been updated. Existing Xresource and config files such as the i3 config file will need to be updated in order for the upgrade to function properly. If you've customized any Regolith config files or created a stand-alone Xresource file (~/.Xresources-regolith), these may need to be updated to take the upgraded files into account. A simple approach to doing this is to move them elsewhere, perform the upgrade, and then reintegrate any desired customizations into the new files:\n$ mkdir ~/regolith-backup $ mv ~/.Xresources-regolith ~/regolith-backup $ mv ~/.config/regolith ~/regolith-backup Once these steps are performed, logging back in should result in a \u0026ldquo;stock\u0026rdquo; instance of Regolith. From there, any changes desired to be reintegrated can be done by editing the new versions of the Regolith config files that exist in the /etc/regolith directory.\nEdits to /etc/regolith/... files If you've taken shortcuts and manually edited files owned by root in /etc/regolith or elsewhere, the packaging tool may not update the files, nor mention that stale files have been left. Even removing the package via apt remove ... may not result in a clean system. In this case, use the purge command to remove the package and manually delete any left over files. For example, to clean up the i3 config file:\n$ sudo apt purge regolith-i3-gaps-config $ sudo rm -Rf /etc/regolith/i3 # be sure to backup any important changes $ sudo apt install regolith-i3-gaps-config Troubleshooting Status indicators missing after Upgrade Regolith 1.4 changes the way in which blocks are installed and configured. This change is necessary to cleanly support the arm64 architecture and make it simple to swap out components like the notification subsystem. From 1.4 onward, blocks are installed by the package manager. See this HowTo on adding and configuring blocks.\nUpgrading Ubuntu The Ubuntu upgrade process automatically removes all PPAs from the system, including Regolith. The Regolith PPA must be re-added once the Ubuntu upgrade completes.\n If the standard Ubuntu session is not installed, install it:$ sudo apt install ubuntu-session. (If you have it already installed this should cause no harm.) Perform the upgrade to the latest Ubuntu version. After rebooting, log into the stock Ubuntu session (not Regolith). Add the Regolith PPA, as the installation process removed PPAs:$ sudo add-apt-repository ppa:regolith-linux/release Upgrade Regolith to the latest version:$ sudo apt upgrade \u0026amp;\u0026amp; sudo apt install regolith-desktop-standard Reboot, and now select the Regolith session at the login screen.  NOTE: Some users have reported that regolith-desktop is automatically uninstalled during the upgrade. If this happens, simply run sudo apt install --reinstall regolith-desktop-standard after the upgrade completes to restore the Regolith desktop session.\nReinstallation In the case that the Regolith desktop environment becomes corrupted or otherwise unbootable, follow these steps to reset it. No user files will be removed as part of this process:\n Login to the stock Ubuntu session. If this session is not available, install it with sudo apt install ubuntu-session. If you are unable to login, type ctrl alt F2 to access a TTY. After installing ubuntu-session, you will have the option to select the Ubuntu session type in the login screen. Uninstall Regolith from within the Ubuntu session:  $ sudo apt purge regolith-* $ sudo apt autoremove $ rm -Rf ~/.config/regolith/flags Verify that no regolith packages are still installed with apt list --installed | grep -i regolith. The command should not return any packages. If it does, manually uninstall them with sudo apt purge \u0026lt;package\u0026gt;. Reinstall Regolith:  $ sudo apt install regolith-desktop i3xrocks-net-traffic i3xrocks-cpu-usage i3xrocks-time #also consider i3xrocks-battery i3xrocks-memory i3xrocks-weather Reboot the computer, and when logging in select the \u0026ldquo;Regolith\u0026rdquo; session in the gear menu. At this point you can remove ubuntu-session if you don't want the stock GNOME session (optional).  Uninstallation of regolith-desktop Simply follow these steps to remove Regolith Desktop installed via PPA from your system:\n Log out of the Regolith session and into the default Ubuntu session. Open a terminal and run:  $ sudo apt purge regolith-desktop \u0026amp;\u0026amp; sudo apt autoremove Now remove the PPA:  $ sudo add-apt-repository --remove ppa:regolith-linux/release You can now safely delete the directory ~/.config/regolith.  ","excerpt":"Regolith 1.4.1 -\u0026gt; Regolith 1.5 If your system already has added the regolith-linux/release PPA, …","ref":"https://regolith-linux.org/docs/getting-started/upgrade/","title":"Upgrade"},{"body":"Regolith R1.4 is a major feature release which includes several improvements and optimizations. Regolith is now smaller and more efficient. The ISO-based installer is now based from the Xubuntu image, and moves from the gdm3 display manager to LightDM. This allows for less resource consumption at runtime and dramatically smaller download size[1]. A new look, lascaille and file search dialog round out the major new features. Read below for more details.\nIf you maintain your own i3 config file, note that the copy shipped in Regolith 1.4 has changed in that it reads more configuration from Xresources. The intention of this change is to require a full copy of the i3 config file less often, by allowing users to customize the system via Xresource overrides instead of copy/edit of the i3 config file.\n For R1.4 in particular @ploum has provided many of the ideas and validation. Gratitude goes out to Regolith contributors and users @cheginit, @nalderto, @baldrailers, @ivomarino, @Josh-Letts, @LawZava, @SkyyySi, @tomster, @gdeflaux, @appelgriebsch, @farsil, and @MrKovar for their time and attention. Also thanks to all that helped to test and filed issues for bugs and feature requests!\nKnown Issues Issues and fixes are being tracked in this project.\nFeatures   Remontoire 1.3.1    Can render keybindings from i3 over socket or from any file. Can be configured to display on any screen edge. Visual updates and bug fixes. Presentation changeable via CSS.     New default look: Lascaille  A new look with a bolder, tighter typeface and a darker, higher contrast color theme become Regolith's default look in 1.4. Cahuella, and other looks continue to be available and can be installed with a few commands.   New File Search Dialog  Based on Rofi and mlocate, users can now quickly find files and launch their default editors from a global dialog.   Faster, Easier Customization  Virtually everything exportable from the i3 config can now be overridden directly with Xresources declarations, from changing the meta key to specifying the command that launches the app search dialog. Additionally, up to 3 user configured programs can be set to be loaded upon start. All of this is possible without creating a user copy of the i3 config file, but rather by overriding a specific Xresource.   i3xrocks supports conf.d style configuration  The status indicators in the bar can now be installed and configured independently. This allows for a cleaner dependency model and more efficient runtime characteristics. It also provides future flexibility for user contributed modules and status indicators. Plus, users can provide their own block descriptors in the user directory to easily override the defaults without having to change the i3 config file.   New architecture support: arm64  With testing done on a Raspberry Pi 4, Regolith now is installable via PPA when using Ubuntu on arm64 devices with the necessary hardware support.   Rewrite of Rofication  Rofication has been rewritten to require less dependencies and be more stable by Regolith contributor @farsil.   New Ubuntu release support: Focal Fossa  Regolith runs as a desktop environment in Canonical's latest release of Ubuntu: 20.04.   Time and Space Optimizations in ISO release  By switching from GDM3 to LightDM, Regolith avoids loading some unnecessary desktop components into RAM, resulting in between 200MB to 300MB savings on cold start. Additionally, the LiveCD installer is now based on the Xubuntu LiveCD which dramatically lowers the size of the installer and install image of the system[2]. Finally, with more fine-grained control of the bar status blocks, only the blocks you've installed will run.   Pluggable Desktop Notification Components  Users can now cleanly switch between desktop notification implementations such as dunst and notify-osd, in addition to Rofication without resorting to hacks.   Integrate gnome-terminal over st-term by Default  Regolith 1.4 uses gnome-terminal with a dynamically generated profile to overcome some character encoding and input devices. st is still available, simply by installing the regolith-st package.   Picom (Compton) config can be overriden by user  Users can provide their own Picom compositor config in their user directory.   i3 reload becomes Regolith reload  Refreshing the UI (look, colors, fonts, etc.) after making changes is now as easy as super shift r.   Polish, polish, polish  Just as in previous releases, many tiny fixes and enhancements were added to Regolith in version 1.4.    Fixes Have a look at the R1.4 project page for a list of bug fixes.\n1: This does **not** mean that Regolith uses XFCE4 or any other aspect of Xubuntu other than the install image.\n2: The trade-off is that users need to install more of the software they require after installation.\n","excerpt":"Regolith R1.4 is a major feature release which includes several improvements and optimizations. …","ref":"https://regolith-linux.org/docs/reference/releases/regolith-1.4-release-notes/","title":"1.4 Release Notes"},{"body":"While we'll cover everything in greater detail in other areas of the documentation, this page covers the very basics.\nThe Super Key Most keybindings you'll be using with Regolith start with the super key. This key typically says \u0026ldquo;WIN\u0026rdquo; or has a MS Windows logo on it. On a Mac it is the Command ⌘ key. Going forward, this key will simply be referred to as super but keep in mind that you can change which physical button super maps to in your configuration if you choose to.\nLaunchers Regolith provides several launchers are a primary way of interacting with your system. Each of these launchers has a consistent look and feel but provides access to a specific entity. Default launchers are provided for applications super space, commands super shift space, notifications super n, windows super ctrl space, and files super alt space.\nLaunch an Application After logging in, you'll be at a blank screen with the bar at the bottom and some keyboard shortcuts on the right. To launch an application, press super space and a menu will be presented with all of the applications installed on the system. If you begin typing the name of the application you wish to launch, the list will filter down to only matching names. You can also scroll through the list with the arrow keys.\nNavigate to a Window To focus on a running application, the super ctrl space keybinding can be used to show a dialog of all running windows. Simply select the desired window and the system will move to the window's containing workspace and set it's focus.\nCreate a new Workspace Workspaces (also known as virtual desktops in some desktop enviroments) are the primary way by which windows can be managed. Each workspace provides a screen for an indepentent set of windows. To create a workspace, super ` will create and move to a new workspace. super 0 - 9 allows for navigation to specific workspaces.\nFind and Launch a File Searching your local computer for a specific file can be achieved in a variety of ways. Regolith provides a file search dialog via super alt space to quickly seek and optionally load a file with it's default application. If the file path exceeds the width of the dialog, alt . will toggle text justification. Pressing enter on a selection will cause the file to be invoked with the xdg-open command.\nTerminal The terminal is a special application that has it's own keybinding, super enter.\nBrowser The preferred browser is also special, and can be launched with super shift enter.\nQuit an Application super shift q will quit the focused application. For misbehaving apps, super alt q will force quit the focused application, but note that any unsaved data will likely be lost.\nSwitching Workspaces A primary way of managing how applications occupy the screen is by the usage of workspaces. A workspace is in essence a group of zero or more applications that all present windows on the same physical display. Users can switch workspaces to \u0026ldquo;gain\u0026rdquo; more space for applications to occupy. Windows can be moved across workspaces. Workspaces can be tied to physical display or be moved to other displays as needed. To switch workspaces, hold down the super key and press one of the number keys. This will navigate to that workspace. If any windows exist in a given workspace, it will show in the bar as being active. Thus, by referring to the bar the user can known of which workspaces active applications live.\nWorkspaces can also be paged forward and backward via super tab and super shift tab.\nConfiguring the System The Settings app (also known as gnome-control-center) is the primary interface for common configuration tasks, such as changing the desktop wallpaper, configuring wifi and bluetooth, configuring app associations, and setting up users. This app can be launched via the super c keybinding or from the Launcher via the Settings app.\nFurther Reading More keybindings are listed in Remontoire, the shortcut application. This app is loaded automatically on the first session, but not on successive logins. The window can be toggled at any time by clicking the circled i icon in the bar, or pressing super shift ?.\n","excerpt":"While we'll cover everything in greater detail in other areas of the documentation, this page covers …","ref":"https://regolith-linux.org/docs/getting-started/basics/","title":"Basic Usage"},{"body":"The default terminal that ships with Regolith R1.4 is gnome-terminal, but any X terminal emulator can be used. To update Regolith to use your already installed terminal of choice, use update-alternatives to specify it as default.\n Run update-alternatives --config x-terminal-emulator to see all available terminals installed on your system. Select the terminal you prefer.  ","excerpt":"The default terminal that ships with Regolith R1.4 is gnome-terminal, but any X terminal emulator …","ref":"https://regolith-linux.org/docs/howto/change-terminal/","title":"Change the Default Terminal"},{"body":" Pay special attention to this section if you are experiencing odd visual glitches or slow graphics performance.\n As mentioned previously, a compositor is a UI component that applies visual effects to windows before they are rendered on-screen. Many desktop environments integrate a compositor directly into the window manager, making it difficult to switch out or disable. In Regolith, the compositor is defined as a pluggable \u0026ldquo;extension point\u0026rdquo; in the packaging system. This means that compositors can be switched out simply by installing the packages that contain them. The underlying packaging system will ensure there are no conflicts and that all the dependencies of a given compositor are also installed.\nFinding Available Compositors The following command will list all compositors configured to work with Regolith:\napt search regolith-compositor- At least the following three compositors should be available:\n   Package Name Backend Description     regolith-compositor-picom-glx Picom The default compositor for Regolith. This compositor is modern, maintained, and handles screen tearing.   regolith-compositor-compton-glx Compton Previously the default compositor for Regolith. This is an older version of Picom before it's name changed.   regolith-compositor-xcompmgr xcompmgr An early compositor that may offer more consistent performance if more complex compositors are problematic.   regolith-compositor-none N/A A no-op package that does not run a Compositor. Best for absolute UI performance, at the cost of visual effects.    Installing a Compositor Due to the way that the compositor is managed by i3-wm, you must log out and back in for compositor changes to take effect. Restarting i3 is not sufficient.\n Run the following package install command to swap out the compositor. In this case we'll run xcompmgr:\n$ apt install regolith-compositor-xcompmgr Log back in and the new compositor should be loaded. You can verify by checking the process list for xcompmgr:\n$ ps aux | grep xcompmgr Overriding a Compositor Configuration Compton/Picom To provide your own Compton/Picom compositor config, copy the default or create your own and save it as ~/.config/regolith/compton/config. Upon next session it will be loaded instead of the default config /etc/regolith/compton/config.\nxcompmgr To provide your own xcompmgr compositor config, copy the default or create your own and save it as ~/.config/regolith/xcompmgr/config\n","excerpt":"Pay special attention to this section if you are experiencing odd visual glitches or slow graphics …","ref":"https://regolith-linux.org/docs/customize/compositors/","title":"Compositors"},{"body":"As an open source project, Regolith is open to anyone to extend, fork, or modify as they see fit. Additionally, we welcome people to join as contributors to the project. If you already have something in mind, please file an issue describing the change you're planning to make to Regolith, or discuss in the Slack channel. This ensures work isn't duplicated or effort wasted. If you're interested in seeing what work is available to start with, take a look at the list of issues looking for help to see what is needed. To get a picture of the future, check the roadmap. Regolith is a young project with much potential for improvement!\nFinancial Support As of the 1.3 release, Regolith has joined Open Collective as a way of receiving financial contributions from users. Financial contributions are vital to pay for infrastructure costs and fund future development of both Regolith itself as well as the upstream components that Regolith is composed of. Go here to contribute to Regolith.\nJoin our Slack channel Click this link to join our Slack channel, which allows you to communicate with the developers of Regolith and other users. Here is where we brainstorm about new features, ways to improve current features, and fix bugs.\nTesting Fixes and Features When bugs are reported by users, we try to have them verify the fix before enabling the update for everyone. Switching to the unstable PPA is necessary for Ubuntu to see that a new version of a package is available for testing a new fix or feature. Once the update has been verified to resolve the problem and not cause any other bugs, it is promoted to the stable PPA for general consumption by Regolith users. See this section for more details on package promotion, and see this section to learn how to switch between PPAs.\nSwitching between PPAs When bugs are reported by users, we try to have them verify the fix before enabling the update for everyone. Switching to the unstable PPA is necessary for testing a new fix or feature before it becomes available to the general population via an automatic update. See this section for more details on package promotion.\nOfficial Regolith Contributors Those that have shown aptitude and desire to help others, fix bugs, or add features to Regolith may be invited to become an official contributor. Official contributors have more abilities with Regolith source repos and have a high level of trust and agency.\nTasks Regolith is a volunteer effort, and so there are no specific expectations regarding how much or in what way people contribute. However here are some tasks that are of great help to the project:\n Groom GitHub issues. If an issue is pending a response from a user and there is no response from the issue creator, close it. If an issue has been resolved but not closed, also close it. To learn about and contribute to the future roadmap, see here for project planning. As a young project, there are a lot of rough edges so if you want to work in fixes that's great but also if you're interested in new features that's fine too. Help with release planning. We try for a release every 3 - 4 months. Besides feature development and bug fixes, documentation and testing are needed. For new features, it is recommended to create a \u0026ldquo;request for comment\u0026rdquo; issue (example) and allow some time for user feedback. These RfCs will be advertised via the mailing list and official Twitter account.  ","excerpt":"As an open source project, Regolith is open to anyone to extend, fork, or modify as they see fit. …","ref":"https://regolith-linux.org/docs/policy-and-process/contributions/","title":"Contribute"},{"body":"Regolith is a Debian-based system. Debian packaging tools can be used to find and install packages.\nFind package via the command line The apt command can be used to query installed or all packages:\n$ apt list --installed \u0026lt;package name\u0026gt; # finds installed packages $ apt list \u0026lt;package name\u0026gt; # finds all packages For example, to list all official Regolith looks that could be installed, run:\n$ apt list regolith-look-* ... To see which status indicators are installed on your system, run:\n$ apt list --installed i3xrocks-* Install via command-line To install packages via the command line, again we can us the apt command, but must use sudo to gain the rights necessary for installation:\n$ sudo apt install \u0026lt;package name\u0026gt; To install the battery status indicator, run:\n$ sudo apt install i3xrocks-battery Find and Install Packages via GUI app There are a number of apps that can provide a nice window interface on top of the apt packaging system, for example synaptic. Refer to the documentation for the tool of your choice to learn how to search and install packages.\n","excerpt":"Regolith is a Debian-based system. Debian packaging tools can be used to find and install packages. …","ref":"https://regolith-linux.org/docs/howto/find-install-packages/","title":"Find and Install Packages"},{"body":"The Regolith UI is composed of the following independent open source projects, and their respective transitive dependencies:\n Xorg X display server i3-gaps window manager Rofi application launcher i3bar bar i3xrocks bar script scheduler, based on i3blocks Rofication notification system Remontoire shortcut window gdm3 desktop session manager (or lightdm if running Regolith Linux from ISO) gnome-flashback GNOME session manager  ","excerpt":"The Regolith UI is composed of the following independent open source projects, and their respective …","ref":"https://regolith-linux.org/docs/interface/","title":"The Interface"},{"body":"Regolith is distributed as a set of interrelated Debian packages. As of Regolith 1.5, there are packages for 3 releases of Ubuntu: bionic, focal, and groovy. This page describes how code changes can be packaged such that users will get the updated code.\nOverview Debian is the packaging format and system used by Regolith. Just like Debian, Ubuntu, and other Debian-based systems, the tools and workflow used to develop and update Regolith packages works in the same manner as those system. The general process:\n Produce some code change against an existing package. In Regolith, generally there is a repo for each package, but in some cases one repo may host several source or binary packages. Update the Debian metadata related to the change. This may just be a changelog entry, or could be more complex such as a new binary package, additional runtime dependencies, or updates to the build files which generate the executable code. Do local testing and then push updates to GitHub. Use a build script to generate the source package files. Upload the source package to launchpad.net, so it can be built and hosted on the Regolith unstable (or experimental depending on the level of change) PPA Test the package once it's been uploaded on a Regolith system. Once testing is complete, the package is promoted to stable and then eventually release.  Basic Packages vs gbp Packages Until recently, packaging was done manually in that no scripts were used. Recently, we've been moving to using the gbp tool which provides some nice productivity enhancements when packaging with git repos. Branch names may differ based on if the package in question has been migrated yet.\nBranch Conventions  If a package contains the package source and the debian metadata, then master represents the development branch. The Ubuntu version associated with a changelog entry is always the oldest supported, currently bionic. This is to comply with launchpad.net's package copy policy. If a package varies from one Ubuntu release to another, then branches are created for each required version, except for the most recent, which is master. Example branches:  bionic eoan master  If a package requires some github integration such that the package cannot be cleanly built on master, then a branch debian is used specifically for the package.  Prerequisites  In order to build packages locally, the debian build tools will need to installed. It is necessary to understand these tools, and how they work together to produce and verify a package. Read the guides here and install the software they specify. To push to a Regolith PPA, you will need to become an official contributor and have your keys added to the launchpad account to enable you to push updates. This is not necessary however to push to your own PPA. Check here to learn how to create your own PPA.  Examples Add comment to i3 config 1. Checkout the regolith-i3-gaps package: $ git clone https://github.com/regolith-linux/regolith-i3-gaps-config.git $ cd regolith-i3-gaps-config 2. Make a change: $ echo \u0026#34;# Here is my comment at the end\u0026#34; \u0026gt;\u0026gt; config 3. Update the changelog to bump the version and describe your change: $ dch This will load an editor and create a new changelog entry. Here is what I added, yours will differ based on identity and configuration:\nregolith-i3-gaps-config (2.4.15-1) bionic; urgency=medium * Added comment to i3 config file. -- Regolith Linux \u0026lt;regolith.linux@gmail.com\u0026gt; Sat, 30 May 2020 20:10:27 -0700 4. Commit and push the change to the git repository: $ git commit -am \u0026#34;Added comment to i3 config file.\u0026#34; $ git push origin 5. A shell script is used to build the source package for uploading to launchpad.net: $ cd .. $ git clone https://github.com/regolith-linux/regolith-builder.git $ cd regolith-builder $ ./build.sh package-model-R1.4.2.json ppa:regolith-linux/ubuntu/unstable /tmp regolith-i3-gaps-config After this script completes, the source package will be uploaded to launchpad.net for inclusion into the unstable PPA.\n6. Verification Go to the launchpad.net PPA page to see the current status of the upload. It typically takes 10 - 30 minutes for a package update to complete.\nSummary Once packaging building completes successfully, the binary packages will be available for users to download during any automatic or manual update process.\n","excerpt":"Regolith is distributed as a set of interrelated Debian packages. As of Regolith 1.5, there are …","ref":"https://regolith-linux.org/docs/developer/packaging/","title":"Packaging"},{"body":"Regolith Linux is an open source project created and maintained by volunteers. At this time there is no method for getting paid support. GitHub issues and the Slack channel are recommended ways of finding fixes or asking questions.\n","excerpt":"Regolith Linux is an open source project created and maintained by volunteers. At this time there is …","ref":"https://regolith-linux.org/docs/policy-and-process/support/","title":"Support"},{"body":"Out of the box the primary battery status will be displayed in the i3-bar. For some laptops that has multiple batteries e.g. ThinkPad, you want to have both batteries displayed. To do so, follow the steps:\n Stage your own i3 config file (tutorial), then open ~/.config/regolith/i3xrocks/conf.d/80_battery in your editor of choice. Find the line that pertains to the battery blocklet:  ... # Battery indicator # # Displays total percentage charge left of specified battery. [battery] interval=30 # instance=BAT0 List all the battery instances running on your machine by running:  ls /sys/class/power_supply/ # AC BAT0 BAT1 Update the staged config file to have a new blocklet as such:  ... # Battery indicator # # Displays total percentage charge left of specified battery. [battery] interval=30 instance=BAT0 [battery] interval=30 instance=BAT1 Further Reading See the reference page for configrations for more details about config files in Regolith.\n","excerpt":"Out of the box the primary battery status will be displayed in the i3-bar. For some laptops that has …","ref":"https://regolith-linux.org/docs/howto/multiple-batteries/","title":"Support Multiple Batteries"},{"body":"GNOME control center (also known as Settings). A key difference between Regolith and other environments described as minimal is the integration of the GNOME settings backend. This provides a well-tested, consistent, and friendly way of configuring your environment and computer. To load the settings app, launch \u0026ldquo;Settings\u0026rdquo; from Rofi or press super c.\nSettings is a special app in Regolith in that it is launched in floating mode. This is because typically when loading settings a user is looking to make a specific change and then exit back to their work. Once loaded use the tab sections on the left of the window to select which item you wish to configure.\ni3-wm The i3 window manager is not part of GNOME and so it's configuration is not viewable or changable from the GNOME control center. Rather, the user must edit the config file and reload i3 to make changes. In Regolith, the i3 config file is at /etc/regolith/i3/config and users can supply their own copy that will override this default if placed at ~/.config/regolith/i3/config.\nMany things about Regolith can be configured in the i3 config file. It is best to read the i3 user guide to understand what and how to modify this file.\nMaintaining a user copy of the i3 config file requires more work when upgrading Regolith, as changes have to managed from the defaults into the user config to support new features in subsequent versions. If possible, it is better to rely on Xresource overrides to customize i3.\n i3bar The i3bar configuration is defined in the i3 config file listed directly above, but the i3bar has it's own configuration for status items. To change which information is displayed in the bar, the config directory is /etc/regolith/i3xrocks/conf.d. There is one file in this directory for every status item, plus 01_setup. The prefixed number defines the order in which the blocks are displayed on the bar. See here for information about customization.\nLook The look of Regolith is configured via Xresources, that live in /etc/regolith/styles/. This topic is covered in detail in the Customize section of the documentation.\nSession When Regolith is initially loaded, a script is run that configures the system and launches i3-wm. While it is not recommended to modify this script, it can provide details about how Regolith is structured and what policy it implements when loading configuration. This file is readable at /usr/bin/i3-gnome-flashback. In fact, this script could be considered the initial seed of the Regolith project and was taken from the i3-gnome-flashback project.\n","excerpt":"GNOME control center (also known as Settings). A key difference between Regolith and other …","ref":"https://regolith-linux.org/docs/interface/system/","title":"System Configuration"},{"body":"R1.3.1 is a quick followup to R1.3 that adds polish and usability features. Headlining features include a more concise way of overriding Xresource defaults and several enhancements to the Remontoire keybinding viewer.\nIf you maintain your own i3 config file, note that the copy shipped in Regolith 1.3.1 has changed in that the comment format has been modified to be readable by Remontoire (example). Without updating your copy i3 config comments, you will not see any keybindings.\n Features   Remontoire 1.1.1  Provides a live view of active i3 keybindings, introduces a machine-readable comment format for i3 config files, and fixes several layout and presentation bugs reported by users.   Ayu Looks  The community contributed Ayu themes have been fully integrated into Regolith with updates to package dependencies and configurations.   Rofi Polish  Numerous updates to the Rofi themes for all provided looks.   Easier Customization  Now, overriding specific Xresource values can be easily done by supplying only the overrides in ~/.config/regolith/Xresources without needing to copying and update any existing files. Additionally, any Xresource files in ~/.config/regolith/Xresources.d can be referenced without absolute path, enabling easier multi-machine configurations.   Utilize GNOME and update-alternatives for Default Apps  GNOME settings for default browser and update-alternatives for preferred terminal are now used by Regolith. No custom configuration changes are required.   Xresource Updates  More UI configuration pulled out of component configs and into Xresources provides more flexibility in how custom looks can be.   Locale used for date/time Format  For those not using the US date and time formats, the bar clock will now automatically use the GNOME hour format and the locale LC_TIME setting to automatically display date and time in the regional form without configuration.   UI Tweaks and Polish  Many small updates across all UI components to further polish the interface, including a new optional dark background adapted from work by /u/InfernusZ9.    Fixes  Debian package dependencies for various Regolith Looks have been fixed. Layout issues with Remontoire have been addressed. Compton configuration cleaned up  ","excerpt":"R1.3.1 is a quick followup to R1.3 that adds polish and usability features. Headlining features …","ref":"https://regolith-linux.org/docs/reference/releases/regolith-1.3.1-release-notes/","title":"1.3.1 Release Notes"},{"body":"i3bar The bar's visibility can be toggled with super i. This can be useful when wanting to remove all distractions and devote 100% of the screen to one or more applications in your workspace. Another way of giving one application complete use of the screen is to press super f to cause the active application to enter full screen mode.\ni3-wm Layout Mode i3-wm offers a few different layout modes. super t can be used to toggle between tabbed, horizontal and vertical split modes.\nSave and Restore Window Positions A tool to save and load window layouts, i3-snapshot is integrated into Regolith 1.3. Pressing super , will write the current window layout to a file in the /tmp directory. super , will restore that layout. i3-snapshot is intended for use-cases in which monitor changes may cause layouts to be randomized. It is not a replacement for i3-save-tree as it uses window identifiers that do not survive across X sessions, nor does it offer a way of positioning application launches into specific layouts.\n","excerpt":"i3bar The bar's visibility can be toggled with super i. This can be useful when wanting to remove …","ref":"https://regolith-linux.org/docs/interface/advanced/","title":"Advanced"},{"body":"The time format (12 or 24 hour) can be specified in Settings: The date format can be specified by selecting the appropriate region in Settings. A preview of the date format is provided, and logging back in is required for changes to take effect. The date and time formats can also be explicitly set via Xresources. To do so, override the i3xrocks.date.format2 Xresource key. See Xresource overrides for details. The format specification for date is simply the arguments that would be passed to the date command on the commandline. For example, to print the year in 4 digits, specify +%Y.\n","excerpt":"The time format (12 or 24 hour) can be specified in Settings: The date format can be specified by …","ref":"https://regolith-linux.org/docs/howto/time-format/","title":"Change the Bar Date and Time Format"},{"body":"As previously mentioned, Regolith is a collection of existing open source components that are integrated into a desktop environment. Due to standards regarding the way UI components should communicate and years of integration between components, for the most part is simple to swap out parts of the UI for others.\nThe following table lists each UI component and notes regarding it's mutability:\n   UI Component Purpose  Alternatives Swappable     Xorg Display System Unknown Unknown    i3-gaps Window Manager  i3-wm, others Difficult but possible   i3bar Desktop Bar  Polybar, lemonbar, many others. Yes, the i3 config file is changed to load a different bar.   i3xrocks Status Indicator Manager i3blocks, barista, many others. Yes, the i3 config file is changed to load a different status program.    Rofication Desktop Notification Manager Dunst, gnome-flashback Yes, the i3 config file is configured to load the Notification backend and Rofi UI, and i3xrocks is configured to load the blocklet.    Remontoire Keybinding Viewer Conky Yes, the i3 config file is changed to load a different help program.    gdm3 Login Manager lightdm, sddm, xdm, others. This is configured in Ubuntu. Installing an alternative session manager should present a prompt to specify which to use.    gnome-flashback Desktop Environment None No     Due to the breadth of the topic, more details are not available here. Experimenting with different UI components is a fun way to learn more about the internals of the operating system. It is recommended to first experiment in a VM running Regolith to avoid breaking your working environment.\n","excerpt":"As previously mentioned, Regolith is a collection of existing open source components that are …","ref":"https://regolith-linux.org/docs/customize/components/","title":"Components"},{"body":"Wallpaper The wallpaper can be changed via Settings, or super c by going to the Background tab and selecting the preferred image or color.\nStatus Bar Indicators Status indicators such as CPU load, date and time, notifications, weather, and other system info can be added or removed by installing packages. For example, to show a status indicator for your laptop battery simply run sudo apt install i3xrocks-battery and then refresh the session. To find what indicators are available, run apt search ^i3xrocks- or search for \u0026ldquo;i3xrocks-\u0026rdquo; in your favorite package manager GUI, such as Synaptic. Learn more about configuring status indicators in this HowTo.\nLooks Colors, wallpaper, window and bar layouts, and other visual factors are bundled together in Regolith and called \u0026ldquo;looks\u0026rdquo;. Looks provide a simple way of changing the entire look of the desktop with a few commands. At this time, looks can only be configured on the command line, but there is a script that manages the details for you. Like status bar indicators, looks are packaged and are installed and removed like any other software package. By convention, Look packages use the following naming format regolith-look-\u0026lt;name\u0026gt;. apt or a GUI package manager can be used to search for available looks. The tool regolith-look can be used to change looks and refresh the active session with the selected look. Here's an example that switches to the cahuella look that shipped by default in Regolith 1.3:\n$ apt search ^regolith-look- ... regolith-look-cahuella/bionic,now 2.4.9 amd64 ... $ sudo apt install regolith-look-cahuella $ regolith-look set cahuella $ regolith-look refresh Installed Looks may also be set via the Look Dialog, activated via super alt l.\nKeybindings The most common keybinding change is the super key. Regolith uses Xresources as the canonical source of truth for settings, which are read by various UI components. The table of Xresource keys open to user configuration can be found here. To change the default super binding from the windows key to alt, add the following line to the file ~/.config/regolith/Xresources:\ni3-wm.mod: Mod1 i3-wm.alt: Mod4 To change other keybindings, creating a user copy of the i3 config file is necessary. See the staging configs HowTo to learn more.\nNote: GNOME also has it's own set of keybindings. When the Regolith session is first initialized, the conflicting GNOME keybindings are removed from the user settings. GNOME keybindings can be managed in Settings.\nWindow Behavior Regolith uses an i3 window manager variant called i3-gaps. It controls how windows are drawn, how keybindings are configured, some start up applications, and other details. By default the Regolith version of the i3 config file is at /etc/regolith/i3/config.\nAlmost Everything Else Settings or gnome-control-panel as it's also known, is the tool to configure locale, date, display, networking, and various other settings. Launch it via the app launcher with super space, type \u0026lsquo;settings\u0026rsquo;, and hit enter to launch the app. Or, the direct keybinding is super c.\nFurther Reading To dig deeper checkout the section on Customization, find what HowTos are available, or read the Xresource reference. Become an i3 power user by reading the user guide.\n","excerpt":"Wallpaper The wallpaper can be changed via Settings, or super c by going to the Background tab and …","ref":"https://regolith-linux.org/docs/getting-started/configuration/","title":"Configuration"},{"body":"Regolith, as a set of independent open-source components, lacks a uniform configuration file, format, or set of conventions. However efforts have been made to create as much consistency as possible by utilizing a simple session-wide key-value configuration facility known as Xresources. Interface preferences such as colors and typeface are defined in Xresource files and then read by components such as Rofi and i3-wm. For the most part, Xresources can be used for most configuration. Lower level changes, for example swap out i3bar for polybar or drun for Rofi require the removal, installation, and configuration of other packages.\nIn addition to the content in this section, refer to the tutorials for step-by-step examples of how to customize Regolith.\n Look The highest level change in the way Regolith looks is called a \u0026ldquo;look\u0026rdquo;. This ties together color, typeface, GTK theme and icons into a packagable unit known as a look. A few looks ship in the Regolith PPA, the default for R1.4 being called lascaille. Regolith Looks can be installed from the package manager. The official Looks follow the naming convention of regolith-look-. Installed Regolith looks can easily be set via the Look dialog; \u0026lt;super\u0026gt;-\u0026lsquo;\u0026rsquo;-l.\nKeybindings and Window Behavior Regolith uses the i3 window manager to display and interface with application windows. Regolith uses the standard version of i3-gaps. Any configuration available to i3-gaps should also work with Regolith, however keep in mind Regolith adds additional configuration via Xresources that may need to be adapted for some customizations. To learn what configuration options are available in i3, consult the user guide.\nStyles Regolith looks are a collection of style definitions that are bundled together as a cohesive whole. But, what if you want to mix and match from different looks or make small tweaks to an existing look? Well, the Xresource files that define the looks can be modified directly. For example, to continue to use the Cahuella look but change the default font from Source Code Pro to, say Ubuntu Mono, one would just need to modify the typeface Xresource file to specify the new font (assuming it's already installed on the system).\nCompositors A compositor is a desktop component that provides visual effects to windows. While not necessary for a desktop to function, they provide some hints to the user regarding the focused application, transitions, and other effects. The performance and behavior of compositors can vary depending on graphics hardware and driver configurations. Due to this, special attention was made such that they can be easily swapped based on the users needs. Regolith compositor packages start with regolith-compositor.\nComponents A deeper level of customization is to change which components are loaded and used. This is an advanced topic and requires both some courage to deal with the unexpected as well as general technical knowledge and some patience.\nPackages Regolith is ultimately a set of Debian packages that exist as collections of files on the user's computer. Packages can be created and hosted by anyone willing and able to create a launchpad account and some skills with packaging. This section covers the details of Regolith's package structure and tips on creating your own.\n","excerpt":"Regolith, as a set of independent open-source components, lacks a uniform configuration file, …","ref":"https://regolith-linux.org/docs/customize/","title":"Customize"},{"body":"Following R1.2, the 1.3 release focused on usability issues reported by users and a continuing refinement of the desktop environment in general, with a focus on making the system easier for those inexperienced with tiling window managers.\nFeatures   Cahuella GTK Theme  A new GTK theme was created for Regolith that more closely follows the standard GNOME theme, Adwaita.   Keybindings Dialog  To allow for a more consistent look and collapsible content for various monitor dimensions, a custom shortcut dialog was developed called Remontoire.   Pluggable Compositors  The subsystem providing visual effects, the compositor, can behave differently based on hardware and driver support. Regolith now packages 3 compositor backends: compton-glx (based on Picom), xcompmgr, and none.   i3-snapshot  In office environments it is common to switch between various display configurations (desk, meeting room...). i3-snapshot allows the user to quickly save and restore existing window layouts in a session.   New Rofi theme  Based on work by /u/InfernusZ9, the Rofi launcher is less distracting.   New notification UI based on Rofication  The previous notification UI was a hold over from more traditional desktop environments that prefer to present an on-screen dialog when a notification is received. Because user-focus is paramount, this was changed such that an indicator in the bar displays the number of unread notifications and the user decides when to view them via a keybinding or button click.   Floating Control Panel  The gnome-control-center app can have a hard time adapting to constrained tiled layouts common with i3-wm. Now when the control panel is loaded, it floats above the existing windows to allow for a quick settings change without impacting other apps.   Clickable Bar Status Actions  For convienence, the default blocks on the bar will launch configuration apps for the associated block. For example, the battery block will launch the power settings control panel, and the notification block will launch the notification viewer.   Discrete and packagable Looks  The underlying style framework used by Regolith has been revamped to allow for \"looks\": colors, themes, typeface, and other thematic state. Looks can be switched with a single command.   New bar status components  Network, keybindings, notifications, focused window, and other blocklets have been improved and added.   Build System  Build scripts were added and improved to allow for the generation of Regolith packages in an automated fashion, making it easier for others to roll their own.   Website  An entirely new website is launching with R1.3, to integrate more content and make it faster for users to find information.    Fixes  i3-gaps-wm: Fix for workspace label bug on startup. Revamping some keybindings based on user feedback. i3xrocks: numerous tweaks and fixes for status indicators. regolith-gnome-flashback: numerous fixes and policy enhancements to session management.  ISO Generation The following commands were applied via the Cubic tool to the stock Ubuntu 18.04 and 19.10 installer images to generate the Regolith Install ISO:\n$ sudo add-apt-repository universe \u0026amp;\u0026amp; sudo add-apt-repository ppa:regolith-linux/release $ sudo apt remove aisleriot branding-ubuntu cheese* gnome-mahjongg gnome-sudoku gnome-mines gnome-todo* gnome-video-* libchees* libgnome-games* libreoffice* remmina* rhythmbox* shotwell* thunderbird* totem* ure ubuntu-session ubuntu-web-launchers $ apt install regolith-desktop regolith-gdm3-theme $ sudo apt autoremove $ cp /usr/share/backgrounds/lucas-bellator-C0OD8OM-oM0-unsplash.jpg /usr/share/backgrounds/warty-final-ubuntu.png The purpose of removing several packages such as games and libreoffice was to reduce the ISO size. All packages removed in the ISO are installable via the apt tool or via the Ubuntu app store.\n","excerpt":"Following R1.2, the 1.3 release focused on usability issues reported by users and a continuing …","ref":"https://regolith-linux.org/docs/reference/releases/regolith-1.3-release-notes/","title":"1.3 Release Notes"},{"body":"Adding or Removing status indicators Finding Status Indicators $ apt search i3xrocks- Installing a Status Indicator $ sudo apt install i3xrocks-memory $ regolith-look refresh Customization of bar Each status indicator on the bar is managed by a file. The filename's sort order maps to the position of the status indicator on the bar. So for example, a file starting with 10_ will come before a file starting with 20_. Within each file contains some information that i3xrocks uses to execute a script that ultimately returns the data you see on the bar. Some of the status indicators have configuration parameters that can be adjusted to your liking. For example, if you would prefer that the battery status changes more readily, the polling interval can be updated. The first thing to do in order to customize the bar is to copy the indicators you wish to see from /etc/regolith/i3xrocks/conf.d to ~/.config/regolith/i3xrocks/conf.d. Once files have been added into ~/.config/regolith/i3xrocks/conf.d, i3xrocks will ignore the default files in /etc/regolith/i3xrocks/conf.d. Each file in ~/.config/regolith/i3xrocks/conf.d can be modified as you see fit. To change the order of status indicators on the bar, simply change the name of the files to the sort order you prefer.\nOnce you've made your changes, refreshing the session should cause the bar to update based on your new configuration.\nFor example, to change the order of the battery and net traffic blocks on the bar and not display notifications, perform the following steps:\n$ ls /etc/regolith/i3xrocks/conf.d 01_setup 30_net-traffic 80_battery 80_rofication 90_time $ mkdir -p ~/.config/regolith/i3xrocks/conf.d $ cd /etc/regolith/i3xrocks/conf.d $ cp 01_setup ~/.config/regolith/i3xrocks/conf.d/01_setup $ cp 80_battery ~/.config/regolith/i3xrocks/conf.d/30_battery $ cp 30_net-traffic ~/.config/regolith/i3xrocks/conf.d/80_net-traffic $ regolith-look refresh If any block configuration exists in the user directory ~/.config/regolith/i3xrocks/conf.d, then the defaults in /etc/regolith/i3xrocks/conf.d will be ignored.\nFurther Reading See the reference page for configrations for more details about config files in Regolith.\n","excerpt":"Adding or Removing status indicators Finding Status Indicators $ apt search i3xrocks- Installing a …","ref":"https://regolith-linux.org/docs/howto/add-remove-blocklets/","title":"Change Bar Status indicators"},{"body":"The following graph generated by debtree provides the dependency relationships of Regolith packages and some of their notable upstream dependencies:\nSource Packages Regolith's packages are hosted on PPAs provided by launchpad.net:\n   PPA Description Launchpad URL     ppa:regolith-linux/unstable Packages staged for developer testing. https://launchpad.net/~regolith-linux/+archive/ubuntu/unstable   ppa:regolith-linux/stable Packages that have been tested but have not been committed to a release. https://launchpad.net/~regolith-linux/+archive/ubuntu/stable   ppa:regolith-linux/release Packages as provided by the current Regolith release https://launchpad.net/~regolith-linux/+archive/ubuntu/release   ppa:kgilmer/speed-ricer General purpose packages that Regolith depends on that are not currently available via Ubuntu's repos. https://launchpad.net/~kgilmer/+archive/ubuntu/speed-ricer    Git Repositories The source code associated with Regolith packages is hosted on Regolith Linux's GitHub organization.\nInstaller ISOs The installer is produced using the Cubic tool and providing the target ISO files as manual uploads to the Regolith Linux GitHub org. The README in regolith-cubic-conf has more details.\nBuild Regolith packages can be built, signed, and staged from the regolith-builder repository. See the project's README for details.\nPackage Δ between Stock Ubuntu and Regolith Linux When installing Regolith via PPA, the user has control and visibility over all package changes via their package installation tool of choice, likely apt, dpkg, or synaptic. However when installing Regolith via the Ubuntu Installer, the user does not see what packages are installed as part of that process. To cut down the size of the installer download, some packages were removed from the Ubuntu installer.\nRegolith 1.2 For Regolith 1.2, the following packages are removed from stock Ubuntu:\n ubuntu-session libreoffice-* rythmbox-*  Of course, any of these packages can be re-added by the user after installation using a variety of tools including the app store.\nRegolith 1.3 For the 1.3 release of Regolith, changes from baseline Ubuntu are documented here.\n","excerpt":"The following graph generated by debtree provides the dependency relationships of Regolith packages …","ref":"https://regolith-linux.org/docs/customize/packages/","title":"Packages"},{"body":"Tasks Triage Bugs, Feature Requests This task is essentially adding a first layer of organization from inputs from users.\n Notice of bugs and feature requests come as email/slack notifications when the bugs are created. Review each incoming gh issue within two days, determine if there is an easy fix. (best effort) For issues without an easy fix, add relevant tags, provide some suggestions, give some time for community members to respond with suggestions. For issues that result in a code change (feature/bug fix), make reference to GH URL for issue in commit so that GH will link to it from isssue Fix/Feature first goes to unstable (see steps below that describe this process). When feature ready, add note to original github issue stating that feature/fix is ready for testing. If no response or no issue reported after a few weeks, change is eligible for promotion to stable.  Take user-contributed PR We accept user contributions with the following steps:\n Get notified of PR from email Identify if code change results in general utility for most users, or is more of a personal concern. If the latter, inform the user politely as such and that the PR will not be merged. Also consider the complexity and volatility of the change. Does the change make maintaining Regolith more difficult (things like version specific changes, changes that require Ubuntu-only packages or behavior, changes that are difficult to test, features that rely on specific hw configurations, etc.) Assuming PR passes these tests, do a PR review. Iterate until the changes is ready for inclusion. Merge the change, publish package to unstable (see below), inform user in PR that package is available for testing.  Publish Package Version to unstable This task describes how code sitting on a computer makes it into a package that can be distributed to other users via the package manager facility.\n Pull commits locally if from others, or whatever local commits if from me. gbp dch to update changelog with git commits. Edit /debian/changelog with correct version and Ubuntu Release (See Rule 1 below). gbp buildpackage to locally test package build. Address all lintian errors and warnings. Some warnings cannot be fixed, or at least I don't yet understand how to fix them. If during package build testing, changes are required, add them to existing commit (git commit --amend) Once package build is ready, push package changes to GitHub Go to local clone of regolith-builder repo, run build.sh script to generate source package and upload to launchpad (this step utilizes Launchpad PKI and as of 7/2/2020 only kgilmer has access to publish packages to Regolith PPAs). Example invocation: ./build.sh package-model-R1.4.2.json ppa:regolith-linux/ubuntu/unstable /tmp/bb56 regolith-compositor-compton-glx Once package is uploaded, monitor email for build error notifications. Iterate on package dev if errors. Once package has built in unstable, sync package versions (see below)  Synchronize Package Versions Across Ubuntu Releases When a package is submitted to laundpad.net to be built into a PPA, the package is only built for the Ubuntu version (Bionic, Focal, etc.) that is listed in the package's changelog file. Here is an example changelog (debian/changelog) snippet:\nregolith-system (1.4.0.4-1) focal; urgency=medium [ Ken Gilmer ] * Add gbp conf file, cleanup. -- Regolith Linux \u0026lt;regolith.linux@gmail.com\u0026gt; Sat, 06 Jun 2020 12:39:39 -0700 ... Here you can see focal is listed after the package version. This means that when this package source was uploaded via dput, launchpad.net built it for the focal release. Users running other versions of Ubuntu will not see this as an update for their system. Because Regolith often supports 2 or 3 different releases, Launchpad needs to be instructed to build the packages for our other supported Ubuntu versions as well. For packages that differ based on Ubuntu version (such as regolith-desktop) typically there is a seperate branch with a unique changelog entry for each Ubuntu target. However for almost all other packages, each is able to run as-is on all supported Ubuntu versions, so we do not need to maintain anything per version, but we do have to copy the package.\nTo do this we simply copy the package from the source Ubuntu version to the target Ubuntu version within the same PPA. This task is error prone and tedious, because the time it takes for launchpad.net to build a package greatly varies depending on load and other factors. A package cannot be copied until it's completely finished building. Attempting to do so will result in an error. Additionally, packages can only be copied from older Ubuntu versions to newer versions. So, we must first build a package for the earliest supported version, and then copy it in order to each later version. All the while keeping the timing constraints in mind so we do not perform an operation on a package that hasn't completed building (copying is also considered building in launchpad.net).\nIt may be possible to write a program that can monitor the state of all packages within a PPA and attempt to copy packages to keep versions consistent, but this program has yet to be written. The current process is to run a script that performs the copies from older to newer versions and simply sleeps between operations hoping to get lucky with the package build times. This makes it slow and error prone.\n For the package recently published to a PPA, verify that the package has completed building, and that it is on the oldest possible version. From the regolith-builder repo, run the sync-pkg-version.sh script, and specify the package name. The following example will copy the package regolith-compoisitor-compton-glx from bionic to eoan, and then focal (note this will change in the future with Ubuntu versions) in the unstable PPA:  $ ./sync-pkg-version.sh unstable regolith-compositor-compton-glx  It's configured to pause 20 minutes between copies, so will take some time to complete. When it's done, check the PPA page (unstable, stable, release) to determine if the copies were successful. If not, run the script again until all supported Ubuntu versions have the same version.  Promote Packages from unstable to stable Once a package has been tested in unstable by the developer of the change (and possibly others), it can be promoted to stable (and eventually release, but this requires planning and coordination). The stable PPA is intended to provide \u0026ldquo;beta\u0026rdquo; level quality of package updates for those that are willing to add some risk in exchange for earlier fixes and features. Most users are expected to use release and so the pool of users should be relatively small. This gives more time for testing and a smaller risk when issues are discovered.\nPackage promotion is essentially just copying packages, as we did in the task above to sync a package's versions across Ubuntu versions. The difference is that instead of copying between Ubuntu versions, we are first copying from source PPA to target PPA (same Ubuntu version), and then across Ubuntu versions within the target PPA.\nThere is a script in regolith-builder specific to this task. It essentially works as the package sync script, it's just implementing the copies as described above. Example that promotes regolith-system from unstable to stable:\n$ ./promote-stage.sh unstable stable regolith-system Note that this script has the same limitations and fragility of the sync versions script. Timing copy operations can fail and so it's necessary to verify each time that the promotion worked as expected. If the package was copied successfully to the target PPA but subsequent sync operations failed, then run the sync-pkg-version.sh script to clean up the package versions in the target PPA.\nPlan a Subsequent Regolith Release Keeping it simple, we rely on the GitHub project planning feature available in the Regolith organization. Workflow:\n Create a new project to house and manage issues related to the release. Generally 3 columns seems to work well (not done, in process, complete). Go through the GitHub issues and determine which issues have or should be fixed in the project created in the above step. For those issues, specify the project in the drop-down to the right. As issues are created, continue to add them to the new project as-needed. Any features that are expected to be in the release, and do not already have issues, need to have issues created so they can be tracked in the project. Ideally, the project should define all changes that were made from the previous version. As bugs get fixed and features get implemented, use the project facility to synchronize the issue status with the project status. Once the scope is finalized for the release and all associated issues are in the \u0026ldquo;done\u0026rdquo; column, the project is complete. Use the project link to communicate with users and other contributors the status of the release or an issue associated with the release. Once a project is complete (has been shipped, no critical bugs), the project can be marked as complete.  Test a Snapshot of Regolith for a Release The stable PPA is a staging area for the next upcoming Regolith release. Packages should not be copied into the release PPA unless they are specifically critical bugs. Features and lesser important bugs should be held in stable until a release occurs.\nTesting via PPA To test the packages in stable, simply add the PPA to your test environment and install Regolith as it would normally be installed (substituting the stable PPA).\nTesting an ISO The regolith-builder repo contains the files create-iso.txt and package-iso-* text files that describe the steps necessary to generate a Regolith ISO from a PPA. Follow these steps with the Cubic ISO builder to generate an ISO. Boot a test environment with the ISO to perform testing.\nPerform a Regolith Release Once testing a release in the stable PPA has been confirmed to be of acceptable quality, perform the following steps to execute the release:\n Communicate the upcoming update on the release-plan Slack channel, linking to the project. Sync all packages from the stable PPA to the release PPA. Communicate that users will now be able to update. Provide release notes or link to project if none available. Generate a new ISO w/ the Cubic tool (described above) and upload this to the regolith-desktop releases page. Use consistent entries for the various field when generating the release on GitHub. Communicate the update is available on the mailing list and Twitter. Monitor Slack and GitHub issues for any problems users may encounter.  Add a New Package to Regolith  Create the GitHub repo in the Regolith org. Use the debian package utilities to generate the package metadata that is stored in the debian directory. Use the debian package utilities to verify that the package builds succesfully locally. Follow the steps in task Publish Package Version to unstable from step 7 such that the new package is installable by users.  Update Package Model The build scripts use a JSON file that defines a few things necessary in order to build source packages and upload them to launchpad.net. These files live in the regolith-builder repo with the schema package-model-\u0026lt;regolith version\u0026gt;.json. Here is an abbreviated snippet of package-model-R1.4.1.txt:\n{ \u0026#34;packages\u0026#34;: [ { \u0026#34;gitRepoUrl\u0026#34;: \u0026#34;https://github.com/regolith-linux/regolith-system.git\u0026#34;, \u0026#34;packageName\u0026#34;: \u0026#34;regolith-system\u0026#34;, \u0026#34;buildPath\u0026#34;: \u0026#34;regolith-system\u0026#34;, \u0026#34;upstreamTarball\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;packageBranch\u0026#34;: \u0026#34;master\u0026#34; }, ... ], \u0026#34;copies\u0026#34;: [ { \u0026#34;ppaUrl\u0026#34;: \u0026#34;~kgilmer/ubuntu/speed-ricer\u0026#34;, \u0026#34;packageName\u0026#34;: \u0026#34;i3-snapshot\u0026#34;, \u0026#34;sourceVersion\u0026#34;: \u0026#34;bionic\u0026#34;, \u0026#34;targetVersions\u0026#34;: \u0026#34;eoan\u0026#34; }, ] } The file contains two sections, \u0026ldquo;packages\u0026rdquo; and \u0026ldquo;copies\u0026rdquo;. Packages defines how the build.sh script can go about generating a source package for a given package. It requires the git repo, the name of the package, the root directory in the repo from which the build should execute, any specific source tarball to use, and the git branch. The Copies section describes packages that are not built as part of Regolith but copied from other PPAs. For example many GTK theme and icon packages are already hosted by other developers on launchpad.net and for Regolith, we simply need to copy them.\nSteps to add a new package model for a new Regolith version:\n Copy from the latest release to the new one. Make changes as needed to the new package model to support the new Regolith version. When running the build.sh script to generate source packages, specify the new package model in the parameter list.  Rules R1 - Ubuntu version in Changelog Packages should be published with changelog entry of oldest supported Ubuntu release (bionic as of 7/2/2020).\nR2 - Git branch names for Ubuntu versions For packages which must maintain Ubuntu-version-specific differences, a distinct version string must be generated for each version of Ubuntu. In this case, the package's git repo will maintain a branch named after the Ubuntu release it builds, with the exception of the branch debian always tracking the current production release of Ubuntu.\n","excerpt":"Tasks Triage Bugs, Feature Requests This task is essentially adding a first layer of organization …","ref":"https://regolith-linux.org/docs/policy-and-process/development/","title":"Development"},{"body":"Adding icons to workspaces can give your desktop a nice and functional look.\nFinding icons Icons are actually characters from fonts installed by Regolith looks. Each look comes with a specific icon font. The icon font is defined in the typeface_bar variable in the typeface config file. For example, the look Cahuella uses the Material Design Icons font (see file /etc/regolith/styles/cahuella/typeface).\nYou can browse the icon font using the Gnome Character Map application (gucharmap package):\n Open Gnome Character Map. Select your icon font in the top left combo. In the script pane select Common. Scroll down the characters pane until you find the icons. Double click on the icon you are looking to use and press the Copy button (bottom right).  Tip: the icons are ordered alphabetically.\nChanging icons Follow these steps to override the default workspace label with your own:\n Find the character you want to use and copy to the clipboard. This example will use the Sigma glyph from Material Design Icons font (). Add a line to your Xresource overrides file with the workspace number and character you wish to use:  $ echo \u0026#34;i3-wm.workspace.06.name: 6:\u0026#34; \u0026gt;\u0026gt; ~/.config/regolith/Xresources Refresh your UI:  $ regolith-look refresh In i3, workspace labels are only updated when a workspace is created. Ensure you're creating an new workspace 6 if following the example above:\nAdding support for icon fonts in text editors Atom:\n Append the name of the icon font to Settings \u0026gt; Editor \u0026gt; Font Familly. Example: Menlo, Consolas, DejaVu Sans Mono, monospace, Material Design Icons  Further Reading See the reference page for configurations for more details about config files in Regolith.\n","excerpt":"Adding icons to workspaces can give your desktop a nice and functional look.\nFinding icons Icons are …","ref":"https://regolith-linux.org/docs/howto/change-workspace-icons/","title":"Change Workspace Icons"},{"body":" You'll need to stage the Regolith Styles Xresource files as described here. Then stage the /etc/regolith/styles/i3-wm Xresource file in your user directory, and ensure that your user copy of the Xresource file #includes this copy. Modify the styles to your preference. After saving the styles file log out and back in to see the change.  Remove everything but the workspace number Follow these steps to edit the Xresource definitions of the workspace labels used by i3:\nEdit your copy of the i3-wm styles file. This file uses C-style macros to generate the Pango markup for each workspace label. There are various ways of changing the macros to strip out the icons, but this may be the most concise. Replace:\n#define WORKSPACE_NAME(INDEX, FONT, COLOR, GLYPH) INDEX:\u0026lt;span font_desc=FONT\u0026gt; INDEX \u0026lt;/span\u0026gt;\u0026lt;span foreground=COLOR\u0026gt;GLYPH\u0026lt;/span\u0026gt; with:\n#define WORKSPACE_NAME(INDEX, FONT, COLOR, GLYPH) Creating workspace labels Some users prefer to title their workspaces based a theme, such as terminal, web, etc. To do this, make modifications to your user copy of /etc/regolith/styles/i3-wm similarly to:\ni3-wm.workspace.01.name: 1: Terminal i3-wm.workspace.02.name: 2: Web i3-wm.workspace.03.name: 3: Chat ","excerpt":"You'll need to stage the Regolith Styles Xresource files as described here. Then stage the …","ref":"https://regolith-linux.org/docs/howto/remove-workspace-icons/","title":"Change Workspace Labels"},{"body":"   Xresource Key Description     St.color0 - St.color15 Color definitions for terminal   St.font Font definition for st-term   Xcursor.size X cursor size   Xcursor.theme X cursor theme   Xft.antialias X anti-alias flag   Xft.dpi X DPI setting   Xft.hinting X hinting   Xft.hintstyle X hint style   Xft.rgba X\trgb setting   gnome.gtk.theme GTK Theme   gnome.icon.theme GTK Icon Theme   gnome.terminal.font Font definition for gnome-terminal   gnome.terminal.scrollbar Flag to enable/disable scrollbar (never | always)   gnome.wallpaper GNOME Wallpaper (can be overridden in Settings)   gnome.wm.theme GNOME Window Manager Theme (unused)   i3-wm.alt Key mapping for Alt key. See the i3 User Guide for details.   i3-wm.bar.background.color Bar Background Color   i3-wm.bar.font Bar Font   i3-wm.bar.position Bar Screen Position   i3-wm.bar.separator.color Color of seperator between blocks   i3-wm.bar.statusline.color    i3-wm.bar.trayoutput Enable or disable the app tray in i3bar   i3-wm.bar.workspace.active.background.color    i3-wm.bar.workspace.active.border.color    i3-wm.bar.workspace.active.text.color    i3-wm.bar.workspace.focused.background.color    i3-wm.bar.workspace.focused.border.color    i3-wm.bar.workspace.focused.text.color    i3-wm.bar.workspace.inactive.background.color    i3-wm.bar.workspace.inactive.border.color    i3-wm.bar.workspace.inactive.text.color    i3-wm.bar.workspace.urgent.background.color    i3-wm.bar.workspace.urgent.border.color    i3-wm.bar.workspace.urgent.text.color    i3-wm.client.focused.color.background    i3-wm.client.focused.color.border    i3-wm.client.focused.color.child_border    i3-wm.client.focused.color.indicator    i3-wm.client.focused.color.text    i3-wm.client.focused_inactive.color.background    i3-wm.client.focused_inactive.color.border    i3-wm.client.focused_inactive.color.child_border    i3-wm.client.focused_inactive.color.indicator    i3-wm.client.focused_inactive.color.text    i3-wm.client.unfocused.color.background    i3-wm.client.unfocused.color.border    i3-wm.client.unfocused.color.child_border    i3-wm.client.unfocused.color.indicator    i3-wm.client.unfocused.color.text    i3-wm.client.urgent.color.background    i3-wm.client.urgent.color.border    i3-wm.client.urgent.color.child_border    i3-wm.client.urgent.color.indicator    i3-wm.client.urgent.color.text    i3-wm.floatingwindow.border.size Window border size in pixels for floating windows   i3-wm.font Window manager font   i3-wm.gaps.inner.size Default gap size between windows in pixels   i3-wm.gaps.outer.size Default gap size at screen edge in pixels   i3-wm.mod Key mapping for Super key. See the i3 User Guide for details.   i3-wm.window.border.size Default border size in pixels   i3-wm.workspace.01.name .. i3-wm.workspace.19.name Workspace Labels   i3-wm.workspace.01.key .. i3-wm.workspace.10.key Workspace Shortucts   i3xrocks.error.color Color for bar module in error mode   i3xrocks.label.battery0 Bar icon glyph   i3xrocks.label.battery100 Bar icon glyph   i3xrocks.label.battery20 Bar icon glyph   i3xrocks.label.battery50 Bar icon glyph   i3xrocks.label.battery80 Bar icon glyph   i3xrocks.label.batteryac Bar icon glyph   i3xrocks.label.batterycharging Bar icon glyph   i3xrocks.label.batteryunknown Bar icon glyph   i3xrocks.label.capslock Bar icon glyph   i3xrocks.label.color Bar icon glyph   i3xrocks.label.cpu Bar icon glyph   i3xrocks.label.disk Bar icon glyph   i3xrocks.label.dn Bar icon glyph   i3xrocks.label.help Bar icon glyph   i3xrocks.label.mediapaused Bar icon glyph   i3xrocks.label.mediaplaying Bar icon glyph   i3xrocks.label.memory Bar icon glyph   i3xrocks.label.mute Bar icon glyph   i3xrocks.label.notify.error Bar icon glyph   i3xrocks.label.notify.none Bar icon glyph   i3xrocks.label.notify.some Bar icon glyph   i3xrocks.label.numlock Bar icon glyph   i3xrocks.label.off Bar icon glyph   i3xrocks.label.on Bar icon glyph   i3xrocks.label.sound Bar icon glyph   i3xrocks.label.thermometer Bar icon glyph   i3xrocks.label.time Bar icon glyph   i3xrocks.label.up Bar icon glyph   i3xrocks.label.wifi Bar icon glyph   i3xrocks.label.wired Bar icon glyph   i3xrocks.nominal Default bar icon color   i3xrocks.value.color Color of numerical value in bar module   i3xrocks.value.font Font for numerical value in bar module   i3xrocks.warning Warning color for bar module   rofi.drun-display-format Fields to render in drun mode in Rofi   rofi.icon-theme Rofi icon theme   rofi.font Rofi font   rofi.modi Rofi modes   rofi.show-icons true if the Rofi dialog should render app icons, false otherwise   rofi.theme Path to the Rofi theme file   rofi.window-format     Optional Xresource keys The following Xresource keys are undefined by default but can be used by users to change behavior as desired.\n   Xresource Key Description     rofi.search.help Show help text on the file search dialog, defaults to true   rofi.search.limit Total number of items to return from an mlocate search, default: 64   i3-wm.gaps.focus_follows_mouse The window under the mouse has focus if enabled   i3-wm.program.launcher.app Command i3 executes from the app launcher keybinding   i3-wm.program.launcher.cmd Command i3 executes from the command launcher keybinding   i3-wm.program.launcher.window Command i3 executes for the window navigation keybinding   i3-wm.program.help Command to launch from the help keybinding   i3-wm.program.file_search Command to launch from the file search keybinding   i3-wm.program.refresh_ui Command to launch from the session refresh keybinding   i3-wm.program.logout Command to launch from the logout keybinding   i3-wm.program.reboot Command to launch from the reboot keybinding   i3-wm.program.shutdown Command to launch from the shutdown keybinding   i3-wm.program.lock Command to launch from the lock screen keybinding   i3-wm.program.sleep Command to launch from the sleep keybinding   i3-wm.program.settings Command to launch from the Control Panel keybinding   i3-wm.program.display Command to launch from the Display Settings keybinding   i3-wm.program.wifi Command to launch from the Wifi Settings keybinding   i3-wm.program.bluetooth Command to launch from the Bluetooth Settings keybinding   i3-wm.program.files Command to launch from the file browser keybinding   i3-wm.program.notification_ui Command to launch from the notification UI keybinding   i3-wm.program.1\u0026hellip;i3-wm.program.3 Optional programs to start with i3   i3xrocks.media-player.player-args Optional arguments used by the media-player i3xrocks block. These arguments are fed straight into playerctl, eg. setting this value to -p spotify only makes the bar display/control spotify.    ","excerpt":"Xresource Key Description     St.color0 - St.color15 Color definitions for terminal   St.font Font …","ref":"https://regolith-linux.org/docs/reference/xresources/","title":"Xresources"},{"body":" More examples and tutorials are available in the Regolith Desktop wiki on GitHub.\n Using the Terminal This section provides examples of how to change Regolith to suit your needs. Most of them will specify commands to be run in the terminal. If using the terminal is new to you or you'd just like to refresh your memory, this guide from Ubuntu is recommended. Another tutorial from linuxcommand.org goes into some more advanced territory.\ni3-wm User Guide In addition to general command-line abilities, having a basic understanding of what options are available in the i3 user guide is recommended to get the most out of the interface.\n","excerpt":"More examples and tutorials are available in the Regolith Desktop wiki on GitHub.\n Using the …","ref":"https://regolith-linux.org/docs/howto/","title":"How To"},{"body":" The user's application is of greater importance than any feature or facility of the desktop environment. Regolith branding should be only enough to afford a cohesive identity to the user and nothing more. Small pieces that can combine into bigger pieces is better than larger, monolithic pieces. Typography is the keystone of the appearance of the system. Less is more. The ideal system is no system.  ","excerpt":" The user's application is of greater importance than any feature or facility of the desktop …","ref":"https://regolith-linux.org/docs/developer/design/","title":"Design"},{"body":"This page describes how to configure the package system to consume Regolith packages between a set of PPAs.\nRegolith PPAs See this section for a description of each PPA. By default users will be on the release PPA which is intended to only be updated upon bug fixes and versioned releases. Here is how to switch to the unstable PPA, by updating the apt packaging configuration:\n Remove the existing release PPA:  $ sudo add-apt-repository --remove ppa:regolith-linux/release Add the new unstable PPA:  $ sudo add-apt-repository ppa:regolith-linux/unstable $ sudo apt update Upgrade packages to the upgraded versions contained in the new PPA:  $ sudo apt upgrade Switch Back To return to the previon configuration, simply follow the steps above but toggle the PPA URIs. So, swap unstable for release.\nOnce the PPAs have been switched, to revert any unwanted package updates from the unstable repository, simply install the specific version you wish to revert to. For example, if regolith-deskop has version 4 in unstable and version 3 in release, you would have been upgraded to version 4 after using the unstable PPA and taking updates. To revert back to version 3 after swapping back to the release PPA, tell apt the specific version you wish to install:\n$ sudo apt install regolith-desktop=3 The general form is apt install \u0026lt;package name\u0026gt;=\u0026lt;package version\u0026gt;. You will be notified by apt that the operation will result in a downgrade package version.\n","excerpt":"This page describes how to configure the package system to consume Regolith packages between a set …","ref":"https://regolith-linux.org/docs/howto/change-ppa/","title":"Switch between Regolith PPAs"},{"body":"This section contains reference material that may help you with Regolith.\n","excerpt":"This section contains reference material that may help you with Regolith.","ref":"https://regolith-linux.org/docs/reference/","title":"Reference"},{"body":"Release notes and other version-specific content can be found here.\n","excerpt":"Release notes and other version-specific content can be found here.","ref":"https://regolith-linux.org/docs/reference/releases/","title":"Releases"},{"body":"If you've installed Regolith via the ISO, a few minor changes were made to address bugs found in R1.4. Most of the fixes will be installed automatically by applying package updates, however a few items must be performed manually.\nRemove deprecated touchpad driver An obsolete driver was mistakenly included with the Regolith 1.4 ISO install that conflicts with GNOME touchpad settings. Perform these steps to fix the touchpad:\n$ sudo apt remove xserver-xorg-input-synaptics Add Regolith boot sequence The ISO release now includes an unbranded boot animation, rather than keeping with the default Ubuntu branded experience. Updating this boot-up theme (also known as a Plymouth theme) also enables users to enter a password if they've setup an encrypted filesystem.\n$ sudo apt install plymouth-theme-regolith $ sudo update-alternatives --config default.plymouth From the prompt ensure that the Regolith configuration is selected.\n","excerpt":"If you've installed Regolith via the ISO, a few minor changes were made to address bugs found in …","ref":"https://regolith-linux.org/docs/howto/update-14-141/","title":"Upgrade Regolith Linux 1.4 to 1.4.1"},{"body":"Regolith ships with a notification system called Rofication. This system is designed to work in the background and not use pop-ups as a way of alerting the user to a new notification. Rather, a small bar item displays the current number of unread notifications and a dialog can activated to interact with the content of the current notifications. This page describes a way to install an alternative notification system which works in a more traditional, expected way.\nWe will use dunst as an example but similar steps can be used with pretty much any other notification component.\n Replace rofication with dunst:  $ sudo apt install dunst $ sudo apt purge regolith-rofication Log out and back in. Test your notifications with notify-send test123. You should see a pop-up from dunst.  ","excerpt":"Regolith ships with a notification system called Rofication. This system is designed to work in the …","ref":"https://regolith-linux.org/docs/howto/replace-notification-system/","title":"Change Notification Systems"},{"body":" Create or add the following value to your ~/.config/regolith/Xresources file:  gnome.terminal.font:\tJetBrains Mono 14 Reload the Xresource configuration:  $ regolith-look refresh Open a new terminal to see the change take effect.  ","excerpt":" Create or add the following value to your ~/.config/regolith/Xresources file:  gnome.terminal.font: …","ref":"https://regolith-linux.org/docs/howto/terminal-font/","title":"Change the Terminal Font Size"},{"body":"This page describes how to configure the package system to manage which PPA package upgrades come from.\nYou can enable the Regolith unstable PPA by adding it to your apt sources:\n# add-apt-repository ppa:regolith-linux/unstable\nIt is recommended that you enable selective upgrades from the unstable PPA. This can be done by configuring your apt preferences to only allow selective installs from this PPA:\ncat \u0026lt;\u0026lt;EOF \u0026gt;/etc/apt/preferences.d/regolith-unstable-updates # Configure apt to allow selective installs of packages from regolith unstable Package: * Pin: release o=LP-PPA-regolith-linux-unstable Pin-Priority: 400 EOF Apt will now use these preferences and not update packages from the unstable PPA unless explicitly done. This can be tested with:\n# apt upgrade -s\nNow, by default, installing a package will come from the primary PPA configured on the machine. As seen by apt-cache policy, there is a version of this package available in unstable as well as the release PPA's:\n$ apt-cache policy i3xrocks-weather i3xrocks-weather: Installed: (none) Candidate: 3.0.21-1 Version table: 3.0.29-1 400 400 http://ppa.launchpad.net/regolith-linux/unstable/ubuntu focal/main amd64 Packages 3.0.21-1 500 500 http://ppa.launchpad.net/regolith-linux/release/ubuntu focal/main amd64 Packages 500 http://ppa.launchpad.net/regolith-linux/stable/ubuntu focal/main amd64 Packages However, installing the package will pull from the release PPA when it isn't explicitly installed from unstable:\n$ apt install i3xrocks-weather Reading package lists... Done Building dependency tree Reading state information... Done The following NEW packages will be installed: i3xrocks-weather 0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded. Need to get 6,360 B of archives. After this operation, 23.6 kB of additional disk space will be used. Get:1 http://ppa.launchpad.net/regolith-linux/release/ubuntu focal/main amd64 i3xrocks-weather amd64 3.0.21-1 [6,360 B] Fetched 6,360 B in 0s (14.0 kB/s) Selecting previously unselected package i3xrocks-weather. (Reading database ... 302563 files and directories currently installed.) Preparing to unpack .../i3xrocks-weather_3.0.21-1_amd64.deb ... Unpacking i3xrocks-weather (3.0.21-1) ... Setting up i3xrocks-weather (3.0.21-1) ... To install the version from the unstable PPA you will need to define it like:\n$ apt install -t focal i3xrocks-weather Reading package lists... Done Building dependency tree Reading state information... Done The following NEW packages will be installed: i3xrocks-weather 0 upgraded, 1 newly installed, 0 to remove and 42 not upgraded. Need to get 6,920 B of archives. After this operation, 22.5 kB of additional disk space will be used. Get:1 http://ppa.launchpad.net/regolith-linux/unstable/ubuntu focal/main amd64 i3xrocks-weather amd64 3.0.29-1 [6,920 B] Fetched 6,920 B in 1s (10.1 kB/s) Selecting previously unselected package i3xrocks-weather. (Reading database ... 302563 files and directories currently installed.) Preparing to unpack .../i3xrocks-weather_3.0.29-1_amd64.deb ... Unpacking i3xrocks-weather (3.0.29-1) ... Setting up i3xrocks-weather (3.0.29-1) ... ","excerpt":"This page describes how to configure the package system to manage which PPA package upgrades come …","ref":"https://regolith-linux.org/docs/howto/install-from-unstable/","title":"Update packages selectively"},{"body":"Like most configuration in Regolith, the i3-gaps gap size can be tuned via Xresources (See here for all Xresource definitions).\n Create or add the following value to your ~/.config/regolith/Xresources file:  i3-wm.gaps.inner.size: 20 In this example we're setting the default gap to 20 pixels.\nReload the Xresource configuration:  $ regolith-look refresh Further Reading See the reference page for configrations for more details about config files in Regolith.\n","excerpt":"Like most configuration in Regolith, the i3-gaps gap size can be tuned via Xresources (See here for …","ref":"https://regolith-linux.org/docs/howto/default-gap/","title":"Change the Default Window Gap"},{"body":"In order to configure i3 to assign a workspace to a given monitor, first find the device name for the monitor you wish to use xrandr:\n$ xrandr --listmonitors Monitors: 1 0: +*eDP-1 1920/309x1080/173+0+0 eDP-1 In this case, the output name is eDP-1. Next add a line like this into a staged copy of your i3 config file:\nworkspace \u0026quot;$ws1\u0026quot; output DP1 Log back in for the changes to take effect.\n","excerpt":"In order to configure i3 to assign a workspace to a given monitor, first find the device name for …","ref":"https://regolith-linux.org/docs/howto/workspace-on-output/","title":"Assign a workspace to a specific Output (Display)"},{"body":"This site contains the information to use the Regolith desktop environment. The content is structured in an order intended for new users, but feel free to skip around as you see fit. Feedback is always welcome and we appreciate any tips on how the documentation can be more complete, easy to read, and effective.\nTerms Before diving in it's good to define some terms to avoid confusion.\n   Term Description     Keybinding A mapping between a set of key presses to a specific action performed by the desktop environment or application.   Desktop Environment A collection of software programs that used as a whole allow a user to interact with a computer using a keyboard, mouse, and monitor.   Bar A passive UI component typically placed at the top or bottom of the screen used to provide system information to the user.   Launcher An active UI component a user will invoke to perform an action, such as navigate to a window or launch a program.   Workspace A collection of windows all present together on the same computer monitor.   Window A program presents a graphical interface to users via windows. Some programs are text based and do not create windows of their own.   Window Manager A program that organizes windows on behalf of the user.   Tile Another word for a window used by tiling window managers.   Floating Window A window that does not share bounds with other windows in a workspace can be placed on top of them. This is the default layout for traditional window managers.    Table of Contents ","excerpt":"This site contains the information to use the Regolith desktop environment. The content is …","ref":"https://regolith-linux.org/docs/","title":"Documentation"},{"body":" Get Regolith Regolith is packaged in two forms:\n   Regolith is available as a stand-alone ISO that can be installed as a complete Linux operating system, and as a \"personal package archive\" (PPA) that installs the Regolith desktop into an existing Ubuntu 18.04, 20.04, or 20.10 system. This page provides a quick start for installs and upgrades but more detailed documentation is available.\n  Regolith Linux 1.4.1 ISO  Regolith can be installed as a stand-alone operating system, and is a good option for the following scenarios:  Minimal system, small install size, less RAM usage Once installed, all defaults and packages are in a known good state Provides more Regolith branding  Download the ISO  and write it to a USB flash drive to install or test drive Regolith as an operating system. To learn how, visit the Ubuntu installer tutorial.\nDownload Regolith 1.4.1Learn More \t   Regolith Desktop 1.5 PPA  Regolith can be installed in an existing Ubuntu 18.04, 20.04, or 20.10 system by adding a Regolith PPA and installing the regolith-desktop package. Advantages to Regolith via PPA:  More compatibility with standard Ubuntu Easy interop with other installed desktop environments Keep existing system installation Easy to remove and return to other desktop environments  To install Regolith Desktop from the release PPA: $ sudo add-apt-repository ppa:regolith-linux/release $ sudo apt install regolith-desktop-standard Learn more about adding PPAs here, and more about PPAs that Regolith provides here. Staring with Regolith 1.5, there are 4 varations of the desktop that can be installed based on system and user needs. See here for details about all desktop packages available.    ","excerpt":"Get Regolith Regolith is packaged in two forms:\n   Regolith is available as a stand-alone ISO that …","ref":"https://regolith-linux.org/download/","title":"Download"},{"body":"","excerpt":"","ref":"https://regolith-linux.org/index.json","title":""},{"body":"This section provides information on various ways that Regolith can be customized and extended.\n","excerpt":"This section provides information on various ways that Regolith can be customized and extended.","ref":"https://regolith-linux.org/docs/developer/","title":"Developer"},{"body":"    Issues Looking for Help If you'd like to get involved with the development of Regolith, have a look at this list of issues that need help. For any issue that lacks detail or is otherwise ambiguous, just comment in the issue with questions and we'll do what we can to fill in the gaps.\nIssues …\n   Future Projects To get a sense of where we are headed, checkout the upcoming projects on GitHub.\nOpen Projects …\n    ","excerpt":"Issues Looking for Help If you'd like to get involved with the development of Regolith, have a look …","ref":"https://regolith-linux.org/interact/","title":"Interact"},{"body":"","excerpt":"","ref":"https://regolith-linux.org/docs/policy-and-process/","title":"Policy and Process"},{"body":"  #td-cover-block-0 { background-image: url(/feature-background_hu82c25fa98cd4e9a8103220017be4b8cb_1137197_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/feature-background_hu82c25fa98cd4e9a8103220017be4b8cb_1137197_1920x1080_fill_q75_catmullrom_top.jpg); } }  Regolith is a modern desktop environment designed to let you work faster by reducing unnecessary clutter and ceremony. Built on top of Ubuntu, GNOME, and i3, Regolith stands on a well-supported and consistent foundation.   Get Regolith   Learn More   Contribute     \n       Visual Tour\nUpon first login, an overlay (toggled anytime via super ?) presents the most important keybindings used with i3-wm.\n      For those that work in the terminal, pressing super enter is all it takes to get to business.\n  A single global app launcher is instantly available from anywhere to run your programs via super space.\n      Need more terminals? Create layouts on the fly by toggling between horizontal and vertical modes with super backspace followed by super enter. Navigate to windows positionally with super h j k l.\n  Toggle floating window mode with super F. Resize windows with super r and move them around with the mouse by pressing super.\n      Gnome Flashback provides consistent and simple system management. Tweak your UI, auto mount your USB drives, connect to wireless networks. Launch the control panel with super c.\n  Easily switch to Solarized or other looks with the regolith-look command. Because looks utilize the package manager, you only store theme resources that you're using.\n      Regolith is built on Ubuntu, providing a system that's up to date and stable.\n  Got a lot going on? Quickly find the window you're looking for via super ctrl space or navigate over workspaces with super [0 - 19].\n      Waste no space on frivolous UI and take advantage of every pixel without micro-managing your window layouts.\n  Desktop notifications do not compete for your attention, but rather can be managed via an on-screen dialog by pressing super n.\n     What Makes Regolith Different\n Delivers a desktop with a functional yet minimal user interface that can be customized and expanded as needed. Combines GNOME's system management features with i3-wm's productive workflow. Enables new users a fast and fun way to try out a tiling window manager. Supports easy customization and ricing via a consistent Xresource configuration. Relies on Ubuntu's app store and package repositories for a large, high quality selection of software. Built to be taken apart. Swap in UI components of your choosing easily. Ships with a toggle overlay of basic keybindings to make getting started easier. Provides a build script and package metadata to allow users to easily fork the desktop environment and distribution.   Thanks to\u0026hellip;\nRegolith is more curation than creation. Here are some of the notable people and entities that produced unaffiliated work independently from which Regolith is based.  Michael Stapelberg and Ingo Bürk Desktop UI  Dave Davenport Desktop UI  yshui Desktop UI  Alberts Muktupāvels and Dmitry Shachnev Desktop UI  Jesús Castro and Alex Palaistras Desktop UI  Vivien Didelot Desktop UI  Arctic Ice Studio and Ethan Schoonover and Ayu Theme Colors  Alastair Reynolds Proper Nouns  Eliver Lara Theme  Sam Hewitt Icons  Psiu Puxa,Lucas Bellator, and Luca Bravo Artwork  PJ Singh Infrastructure  Canonical and GitHub Infrastructure      ","excerpt":"#td-cover-block-0 { background-image: …","ref":"https://regolith-linux.org/","title":"Regolith Linux"},{"body":"","excerpt":"","ref":"https://regolith-linux.org/search/","title":"Search Results"}]
